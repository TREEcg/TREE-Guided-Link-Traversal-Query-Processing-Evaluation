/// <reference types="node" />
/***************************************
 * Title: SnapshotTransform
 * Description: Transforms a Member stream to a stream of materialized Members at a given snapshot time.
 * Author: Wout Slabbinck (wout.slabbinck@ugent.be)
 * Created on 07/03/2022
 *****************************************/
import { Transform } from 'stream';
import { Store } from "n3";
export interface ISnapshotOptions {
    date?: Date;
    snapshotIdentifier?: string;
    ldesIdentifier: string;
    versionOfPath?: string;
    timestampPath?: string;
    materialized?: boolean;
}
export declare class SnapshotTransform extends Transform {
    private readonly logger;
    private transformedMap;
    private versionTimeMap;
    private readonly date;
    private readonly snapshotIdentifier;
    private readonly ldesIdentifier;
    private readonly versionOfPath;
    private readonly timestampPath;
    private readonly materialized;
    private emitedMetadata;
    private metadataStore;
    /**
     *
     * @param options parameters for creating the snapshot
     * @param snapshotStore (optional) a snapshot Store (can be used to create an incremental snapshot on top of an existing one)
     */
    constructor(options: ISnapshotOptions, snapshotStore?: Store);
    _transform(chunk: any, _enc: any, done: () => void): void;
    _flush(): void;
    private processMember;
    private transform;
    /**
     * Extracts the timestamp from a member (which is a version-object).
     * note: only handles xsd:dateTime
     * @param member a {@link Member}
     * @returns {string}
     */
    private extractDate;
    /**
     * Extracts the object Identifier from a member (which is a version-object).
     * @param member a non-materialized {@link Member}
     * @returns {string}
     */
    private extractObjectIdentifier;
    private materialize;
}
