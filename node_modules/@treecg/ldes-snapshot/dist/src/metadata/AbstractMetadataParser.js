"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractMetadataParser = void 0;
var Vocabularies_1 = require("../util/Vocabularies");
/**
 * The {@link AbstractMetadataParser} contains generic static methods to parse parts of an LDES.
 */
var AbstractMetadataParser = /** @class */ (function () {
    function AbstractMetadataParser() {
    }
    /**
     * Extracts exactly one LDES identifier from an N3 Store.
     * @param store the N3 store.
     * @returns {string}
     */
    AbstractMetadataParser.parseLDESIdentifier = function (store) {
        if (store.getSubjects(Vocabularies_1.RDF.type, Vocabularies_1.LDES.EventStream, null).length !== 1) {
            throw Error("Expected only one Event Stream. ".concat(store.getSubjects(Vocabularies_1.RDF.type, Vocabularies_1.LDES.EventStream, null).length, " are present."));
        }
        return store.getSubjects(Vocabularies_1.RDF.type, Vocabularies_1.LDES.EventStream, null)[0].value;
    };
    /**
     * Extracts the timestamp path of an LDES from an N3 Store.
     * @param store the N3 store.
     * @param ldesIdentifier the LDES identifier
     * @returns {string}
     */
    AbstractMetadataParser.parseTimestampPath = function (store, ldesIdentifier) {
        if (store.getObjects(ldesIdentifier, Vocabularies_1.LDES.timestampPath, null).length !== 1) {
            throw Error("Expected one timestampPath. ".concat(store.getObjects(ldesIdentifier, Vocabularies_1.LDES.timestampPath, null).length, " are present."));
        }
        return store.getObjects(ldesIdentifier, Vocabularies_1.LDES.timestampPath, null)[0].value;
    };
    /**
     * Extracts the versionOf path of an LDES from an N3 Store.
     * @param store the N3 store.
     * @param ldesIdentifier the LDES identifier
     * @returns {string}
     */
    AbstractMetadataParser.parseVersionOfPath = function (store, ldesIdentifier) {
        if (store.getObjects(ldesIdentifier, Vocabularies_1.LDES.versionOfPath, null).length !== 1) {
            throw Error("Expected one versionOfPath. ".concat(store.getObjects(ldesIdentifier, Vocabularies_1.LDES.versionOfPath, null).length, " are present."));
        }
        return store.getObjects(ldesIdentifier, Vocabularies_1.LDES.versionOfPath, null)[0].value;
    };
    return AbstractMetadataParser;
}());
exports.AbstractMetadataParser = AbstractMetadataParser;
