/// <reference types="node" />
/***************************************
 * Title: Conversion
 * Description: Conversion functions
 * Author: Wout Slabbinck (wout.slabbinck@ugent.be)
 * Created on 10/12/2021
 *****************************************/
import { Store } from "n3";
import { ParseOptions } from "rdf-parse/lib/RdfParser";
import { Readable } from "stream";
import { Member } from "@treecg/types";
import { Quad } from "@rdfjs/types";
export declare function turtleStringToStore(text: string, baseIRI?: string): Promise<Store>;
export declare function ldjsonToStore(text: string, baseIRI?: string): Promise<Store>;
/**
 * Converts a store to turtle string
 * @param store
 * @returns {string}
 */
export declare function storeToString(store: Store): string;
export declare function stringToStore(text: string, options: ParseOptions): Promise<Store>;
/**
 * From an N3 store to create a member stream https://github.com/TREEcg/types/blob/main/lib/Member.ts
 * @param store
 * @returns {Readable}
 */
export declare function storeAsMemberStream(store: Store): Readable;
/**
 * extract members without containment triple
 * @param store
 * @param ldesIdentifier
 * @returns {Member[]}
 */
export declare function extractMembers(store: Store, ldesIdentifier: string): Member[];
/**
 * From a member stream https://github.com/TREEcg/types/blob/main/lib/Member.ts to a N3 store
 * @param memberStream
 * @param collectionIdentifier
 * @returns {Store}
 */
export declare function memberStreamtoStore(memberStream: Readable, collectionIdentifier?: string): Promise<Store>;
/**
 * A function to convert materialized quads (generated from {@link https://www.npmjs.com/package/@treecg/version-materialize-rdf.js|materialize})
 * to triple quads.
 *
 * Optionally, the timestampPath can be given to add the timestamp property to the Object Identifier instead of the member Identifier.
 * @param materializedQuads materialized Quads.
 * @param opts Contains the object identifier and the timestampPath to couple the timestamp to the object identifier.
 * @returns {Quad[]} materialized Triples.
 */
export declare function makeTriples(materializedQuads: Quad[], opts?: {
    objectIdentifier: string;
    timestampPath: string;
}): Quad[];
