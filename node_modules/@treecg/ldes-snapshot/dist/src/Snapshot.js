"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Snapshot = void 0;
var SnapshotUtil_1 = require("./util/SnapshotUtil");
var SnapshotTransform_1 = require("./SnapshotTransform");
var Conversion_1 = require("./util/Conversion");
/***************************************
 * Title: Snapshot
 * Description: Class to create a materialized LDES at a certain timestamp (only works for small LDESes)
 * Author: Wout Slabbinck (wout.slabbinck@ugent.be)
 * Created on 03/03/2022
 *****************************************/
var Snapshot = /** @class */ (function () {
    /**
     *
     * @param store an N3 Store containing a versioned LDES from which you want to create a Snapshot
     */
    function Snapshot(store) {
        this.baseStore = store;
    }
    /**
     * Creates a snapshot from a versioned LDES. (see: https://semiceu.github.io/LinkedDataEventStreams/#version-materializations)
     * Default:
     * uses "http://example.org/snapshot" as identifier for the snapshot (tree:collection)
     * and uses the current time for ldes:versionMaterializationUntil
     * @param options optional extra parameters for creating the snapshot
     * @param snapshotStore (optional) a snapshot Store (can be used to create an incremental snapshot on top of an existing one)
     * @return {Promise<Store>}
     */
    Snapshot.prototype.create = function (options, snapshotStore) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function () {
            var store, memberStream, snapshotTransformer, transformationOutput, transformedStore;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        options.date = (_a = options.date) !== null && _a !== void 0 ? _a : new Date();
                        options.snapshotIdentifier = (_b = options.snapshotIdentifier) !== null && _b !== void 0 ? _b : 'http://example.org/snapshot';
                        options.timestampPath = (_c = options.timestampPath) !== null && _c !== void 0 ? _c : (0, SnapshotUtil_1.retrieveTimestampProperty)(this.baseStore, options.ldesIdentifier);
                        options.versionOfPath = (_d = options.versionOfPath) !== null && _d !== void 0 ? _d : (0, SnapshotUtil_1.retrieveVersionOfProperty)(this.baseStore, options.ldesIdentifier);
                        store = (0, SnapshotUtil_1.createSnapshotMetadata)(options);
                        memberStream = (0, Conversion_1.storeAsMemberStream)(this.baseStore);
                        snapshotTransformer = new SnapshotTransform_1.SnapshotTransform(options, snapshotStore);
                        transformationOutput = memberStream.pipe(snapshotTransformer);
                        return [4 /*yield*/, (0, Conversion_1.memberStreamtoStore)(transformationOutput, options.snapshotIdentifier)];
                    case 1:
                        transformedStore = _e.sent();
                        store.addQuads(transformedStore.getQuads(null, null, null, null));
                        return [2 /*return*/, store];
                }
            });
        });
    };
    return Snapshot;
}());
exports.Snapshot = Snapshot;
