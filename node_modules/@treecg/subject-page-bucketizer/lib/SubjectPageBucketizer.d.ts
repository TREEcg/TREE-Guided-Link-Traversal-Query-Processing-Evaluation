import type * as RDF from '@rdfjs/types';
import { BucketizerCoreExt, Factory } from '@treecg/bucketizer-core';
import { RelationParameters, BucketizerCoreExtOptions, Bucketizer } from '@treecg/types';
export declare class SubjectPageBucketizerFactory implements Factory<BucketizerCoreExtOptions> {
    type: string;
    build(config: BucketizerCoreExtOptions, state?: any): Bucketizer;
    ldConfig(quads: RDF.Quad[], subject: RDF.Term): BucketizerCoreExtOptions | void;
}
export declare type SubjectInputType = Partial<BucketizerCoreExtOptions>;
export declare class SubjectPageBucketizer extends BucketizerCoreExt<{}> {
    static build(bucketizerOptions: SubjectInputType, state?: any): SubjectPageBucketizer;
    protected createBuckets(propertyPathObjects: RDF.Term[], newRelations: [string, RelationParameters][]): string[];
    private createRelationParameters;
}
