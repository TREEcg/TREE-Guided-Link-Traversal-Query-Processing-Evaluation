{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/config/index.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;GASG;AACH,yCAAyC;AAC5B,QAAA,uBAAuB,GAAG,GAAG,CAAC;AAC3C,kGAAkG;AACrF,QAAA,0BAA0B,GAAG,KAAK,CAAC;AAChD,qDAAqD;AACxC,QAAA,oBAAoB,GAAG,MAAM,CAAC;AAC3C,2DAA2D;AAC9C,QAAA,oBAAoB,GAAG,GAAG,CAAC","sourcesContent":["/*\n * Default configuration.\n *\n * - clockToleranceInSeconds: How far in the future a token can be (if client's or server's clocks are off).\n * - maxAccessTokenAgeInSeconds: How old an Access Token can be.\n * - maxAgeInMilliseconds: For DPoP proofs & JTI cache (so that DPoP would fail to be replayed); also for Issuer Key Set cache & WebID issuers cache.\n * - maxRequestsPerSecond: Used to calculate the default cache size based on max age.\n *\n * Note: DPoP clock tolerance for time based token verification is advised to be a few seconds or minutes. See DPoP Proof Replay https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop-09#section-11.1).\n */\n// Set to 120 so clients can be a bit off\nexport const clockToleranceInSeconds = 120;\n// Limit Access Token Age to 24 Hours, it should probably have an exp claim much shorter than that\nexport const maxAccessTokenAgeInSeconds = 86400;\n// Default max age to 120 seconds for everything else\nexport const maxAgeInMilliseconds = 120000;\n// An estimate of 100 rps for most small to medium projects\nexport const maxRequestsPerSecond = 100;\n"]}