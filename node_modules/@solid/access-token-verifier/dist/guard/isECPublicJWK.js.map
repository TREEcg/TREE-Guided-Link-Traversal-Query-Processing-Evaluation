{"version":3,"file":"isECPublicJWK.js","sourceRoot":"","sources":["../../src/guard/isECPublicJWK.ts"],"names":[],"mappings":";;;AAAA,yCAAoC;AAGpC;;;;;;GAMG;AAEH,SAAgB,aAAa,CAAC,CAAU;IACtC,mBAAO,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3D,mBAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,IAAa,CAAC,CAAC;IACxC,mBAAO,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;IACnE,mBAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,mBAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AAND,sCAMC","sourcesContent":["import { asserts } from \"ts-guards\";\nimport type { ECPublicJWK } from \"../type\";\n\n/*\n * export function isECJWK(x: unknown): asserts x is ECJWK {\n *   isECPublicJWK(x);\n *   asserts.isObjectPropertyOf(x, \"d\");\n *   asserts.isString(x.d);\n * }\n */\n\nexport function isECPublicJWK(x: unknown): asserts x is ECPublicJWK {\n  asserts.areObjectPropertiesOf(x, [\"kty\", \"crv\", \"x\", \"y\"]);\n  asserts.isLiteral(x.kty, \"EC\" as const);\n  asserts.isLiteralType(x.crv, new Set([\"P-256\", \"P-384\", \"P-521\"]));\n  asserts.isString(x.x);\n  asserts.isString(x.y);\n}\n"]}