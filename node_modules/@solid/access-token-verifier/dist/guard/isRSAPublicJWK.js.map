{"version":3,"file":"isRSAPublicJWK.js","sourceRoot":"","sources":["../../src/guard/isRSAPublicJWK.ts"],"names":[],"mappings":";;;AAAA,yCAAoC;AACpC,6DAA0D;AAG1D;;;;;;;;;;;GAWG;AAEH,SAAgB,cAAc,CAAC,CAAU;IACvC,mBAAO,CAAC,qBAAqB,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3D,mBAAO,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAE,6BAAa,CAAC,CAAC;IAC5C,mBAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,KAAc,CAAC,CAAC;IACzC,mBAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,mBAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC;AAND,wCAMC","sourcesContent":["import { asserts } from \"ts-guards\";\nimport { RSA_ALGORITHM } from \"../constant/RSA_ALGORITHM\";\nimport type { RSAPublicJWK } from \"../type\";\n\n/*\n * export function isRSAJWK(x: unknown): asserts x is RSAJWK {\n *   isRSAPublicJWK(x);\n *   asserts.areObjectPropertiesOf(x, [\"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"]);\n *   asserts.isString(x.d);\n *   asserts.isString(x.p);\n *   asserts.isString(x.q);\n *   asserts.isString(x.dp);\n *   asserts.isString(x.dq);\n *   asserts.isString(x.qi);\n * }\n */\n\nexport function isRSAPublicJWK(x: unknown): asserts x is RSAPublicJWK {\n  asserts.areObjectPropertiesOf(x, [\"alg\", \"kty\", \"n\", \"e\"]);\n  asserts.isLiteralType(x.alg, RSA_ALGORITHM);\n  asserts.isLiteral(x.kty, \"RSA\" as const);\n  asserts.isString(x.n);\n  asserts.isString(x.e);\n}\n"]}