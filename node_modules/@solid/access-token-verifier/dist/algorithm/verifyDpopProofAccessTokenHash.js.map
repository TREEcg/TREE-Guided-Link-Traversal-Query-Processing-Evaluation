{"version":3,"file":"verifyDpopProofAccessTokenHash.js","sourceRoot":"","sources":["../../src/algorithm/verifyDpopProofAccessTokenHash.ts"],"names":[],"mappings":";;;AAAA,mCAAoC;AACpC,+BAAiC;AACjC,gGAA6F;AAE7F;;;;;;;;GAQG;AACH,SAAgB,8BAA8B,CAC5C,WAAmB,EACnB,GAAW;IAEX,MAAM,MAAM,GAAG,gBAAS,CAAC,MAAM,CAC7B,IAAA,mBAAU,EAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CACxE,CAAC;IACF,IAAI,MAAM,KAAK,GAAG,EAAE;QAClB,MAAM,IAAI,mEAAgC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;KACzD;AACH,CAAC;AAVD,wEAUC","sourcesContent":["import { createHash } from \"crypto\";\nimport { base64url } from \"jose\";\nimport { AccessTokenHashVerificationError } from \"../error/AccessTokenHashVerificationError\";\n\n/**\n * Verifies the DPoP proof access token hash\n *\n * > \"ath\": hash of the access token (REQUIRED). The value MUST be the result of a base64url encoding (with no padding) the SHA-256 hash of the ASCII encoding of the associated access token's value.\n * > -- https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop-03#section-4.2\n *\n * @param accessToken The value of the access token associated with the DPoP proof\n * @param ath The DPoP proof ath parameter\n */\nexport function verifyDpopProofAccessTokenHash(\n  accessToken: string,\n  ath: string\n): void {\n  const actual = base64url.encode(\n    createHash(\"sha256\").update(Buffer.from(accessToken, \"ascii\")).digest()\n  );\n  if (actual !== ath) {\n    throw new AccessTokenHashVerificationError(actual, ath);\n  }\n}\n"]}