{"version":3,"file":"verifyAuthenticationScheme.js","sourceRoot":"","sources":["../../src/algorithm/verifyAuthenticationScheme.ts"],"names":[],"mappings":";;;AAAA,0GAAuG;AAEvG;;;;;;;;;;;;;;;GAeG;AACH,SAAgB,0BAA0B,CAAC,mBAA2B;IACpE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,mBAAmB,CAAC,EAAE;QACjD,MAAM,IAAI,6EAAqC,CAAC,mBAAmB,CAAC,CAAC;KACtE;AACH,CAAC;AAJD,gEAIC","sourcesContent":["import { AuthenticationSchemeVerificationError } from \"../error/AuthenticationSchemeVerificationError\";\n\n/**\n * Verify the authentication scheme\n *\n * Currently, Bearer tokens DPoP bound or not are supported.\n *\n * > HTTP provides a simple challenge-response authentication framework that can be used by a server to challenge a client request and by a client to provide authentication information. It uses a case-insensitive token as a means to identify the authentication scheme, followed by additional information necessary for achieving authentication via that scheme.\n * > -- https://datatracker.ietf.org/doc/html/rfc7235#section-2.1\n *\n * > credentials = \"Bearer\" 1*SP b64token\n * > -- https://datatracker.ietf.org/doc/html/rfc6750#section-2.1\n *\n * > credentials = \"DPoP\" 1*SP token68\n * > -- https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop-04#section-7.1\n *\n * @param authorizationHeader The authorization header used for the request.\n */\nexport function verifyAuthenticationScheme(authorizationHeader: string): void {\n  if (!/^(DPoP|Bearer) /i.test(authorizationHeader)) {\n    throw new AuthenticationSchemeVerificationError(authorizationHeader);\n  }\n}\n"]}