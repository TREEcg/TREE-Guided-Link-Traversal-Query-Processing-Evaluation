{"version":3,"file":"WebIDIssuersCache.js","sourceRoot":"","sources":["../../src/class/WebIDIssuersCache.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAiC;AACjC,kGAA+F;AAC/F,sCAAuE;AAGvE,MAAa,iBAAkB,SAAQ,mBAA+B;IACpE;QACE,KAAK,CAAC,EAAE,GAAG,EAAE,6BAAoB,EAAE,MAAM,EAAE,6BAAoB,EAAE,CAAC,CAAC;IACrE,CAAC;IAEM,KAAK,CAAC,UAAU,CACrB,KAAa;QAEb,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC/C,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,MAAM,YAAY,GAAG,MAAM,IAAA,iEAA+B,EAAC,KAAK,CAAC,CAAC;YAClE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,YAAY,CAAC,CAAC;YACzC,OAAO,YAAY,CAAC;SACrB;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;AAhBD,8CAgBC","sourcesContent":["import LRUCache from \"lru-cache\";\nimport { retrieveWebidTrustedOidcIssuers } from \"../algorithm/retrieveWebidTrustedOidcIssuers\";\nimport { maxAgeInMilliseconds, maxRequestsPerSecond } from \"../config\";\nimport type { RetrieveOidcIssuersFunction } from \"../type\";\n\nexport class WebIDIssuersCache extends LRUCache<string, Array<string>> {\n  public constructor() {\n    super({ max: maxRequestsPerSecond, maxAge: maxAgeInMilliseconds });\n  }\n\n  public async getIssuers(\n    webid: string\n  ): ReturnType<RetrieveOidcIssuersFunction> {\n    const cachedValue = this.get(webid.toString());\n    if (cachedValue === undefined) {\n      const issuersValue = await retrieveWebidTrustedOidcIssuers(webid);\n      this.set(webid.toString(), issuersValue);\n      return issuersValue;\n    }\n    return cachedValue;\n  }\n}\n"]}