{"version":3,"file":"IssuerKeySetCache.js","sourceRoot":"","sources":["../../src/class/IssuerKeySetCache.ts"],"names":[],"mappings":";;;;;;AACA,0DAAiC;AACjC,kGAA+F;AAC/F,sCAAuE;AAGvE,MAAa,iBAAkB,SAAQ,mBAGtC;IACC;QACE,KAAK,CAAC,EAAE,GAAG,EAAE,6BAAoB,EAAE,MAAM,EAAE,6BAAoB,EAAE,CAAC,CAAC;IACrE,CAAC;IAEM,KAAK,CAAC,SAAS,CACpB,GAAW;QAEX,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;QAC7C,IAAI,WAAW,KAAK,SAAS,EAAE;YAC7B,MAAM,WAAW,GAAG,MAAM,IAAA,iEAA+B,EAAC,GAAG,CAAC,CAAC;YAC/D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,WAAW,CAAC,CAAC;YACtC,OAAO,WAAW,CAAC;SACpB;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;CACF;AAnBD,8CAmBC","sourcesContent":["import type { createRemoteJWKSet } from \"jose\";\nimport LRUCache from \"lru-cache\";\nimport { retrieveAccessTokenIssuerKeySet } from \"../algorithm/retrieveAccessTokenIssuerKeySet\";\nimport { maxAgeInMilliseconds, maxRequestsPerSecond } from \"../config\";\nimport type { RetrieveIssuerKeySetFunction } from \"../type\";\n\nexport class IssuerKeySetCache extends LRUCache<\n  string,\n  ReturnType<typeof createRemoteJWKSet>\n> {\n  public constructor() {\n    super({ max: maxRequestsPerSecond, maxAge: maxAgeInMilliseconds });\n  }\n\n  public async getKeySet(\n    iss: string\n  ): ReturnType<RetrieveIssuerKeySetFunction> {\n    const cachedValue = this.get(iss.toString());\n    if (cachedValue === undefined) {\n      const keySetValue = await retrieveAccessTokenIssuerKeySet(iss);\n      this.set(iss.toString(), keySetValue);\n      return keySetValue;\n    }\n    return cachedValue;\n  }\n}\n"]}