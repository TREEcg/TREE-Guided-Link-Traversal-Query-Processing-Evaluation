{"version":3,"file":"InternalServerError.js","sourceRoot":"","sources":["../../../src/util/errors/InternalServerError.ts"],"names":[],"mappings":";;;AACA,2CAAqD;AAErD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,qBAAqB,CAAC,CAAC;AAEzE;;GAEG;AACH,MAAa,mBAAoB,SAAQ,aAAa;IACpD,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1B,CAAC;CACF;AAJD,kDAIC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(500, 'InternalServerError');\n\n/**\n * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n */\nexport class InternalServerError extends BaseHttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(message, options);\n  }\n}\n"]}