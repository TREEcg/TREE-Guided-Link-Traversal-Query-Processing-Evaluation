{"version":3,"file":"PreconditionFailedHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/PreconditionFailedHttpError.ts"],"names":[],"mappings":";;;AACA,2CAAqD;AAErD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,6BAA6B,CAAC,CAAC;AAEjF;;GAEG;AACH,MAAa,2BAA4B,SAAQ,aAAa;IAC5D,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1B,CAAC;CACF;AAJD,kEAIC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(412, 'PreconditionFailedHttpError');\n\n/**\n * An error thrown when access was denied due to the conditions on the request.\n */\nexport class PreconditionFailedHttpError extends BaseHttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(message, options);\n  }\n}\n"]}