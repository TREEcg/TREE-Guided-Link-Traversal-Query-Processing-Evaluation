{"version":3,"file":"PayloadHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/PayloadHttpError.ts"],"names":[],"mappings":";;;AACA,2CAAqD;AAErD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;AAEtE;;GAEG;AACH,MAAa,gBAAiB,SAAQ,aAAa;IACjD;;;;OAIG;IACH,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,OAAO,IAAI,6BAA6B,EAAE,OAAO,CAAC,CAAC;IAC3D,CAAC;CACF;AATD,4CASC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(413, 'PayloadHttpError');\n\n/**\n * An error thrown when data exceeded the preconfigured quota\n */\nexport class PayloadHttpError extends BaseHttpError {\n  /**\n   * Default message is 'Storage quota was exceeded.'.\n   * @param message - Optional, more specific, message.\n   * @param options - Optional error options.\n   */\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(message ?? 'Storage quota was exceeded.', options);\n  }\n}\n"]}