{"version":3,"file":"MethodNotAllowedHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/MethodNotAllowedHttpError.ts"],"names":[],"mappings":";;;AAAA,2BAAiC;AAEjC,0CAAwD;AACxD,kDAA8C;AAE9C,2CAAqD;AACrD,IAAO,IAAI,GAAG,gBAAW,CAAC,IAAI,CAAC;AAE/B,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,2BAA2B,CAAC,CAAC;AAE/E;;;GAGG;AACH,MAAa,yBAA0B,SAAQ,aAAa;IAG1D,YAAmB,UAAoB,EAAE,EAAE,OAAgB,EAAE,OAA0B;QACrF,KAAK,CAAC,OAAO,IAAI,GAAG,OAAO,mBAAmB,EAAE,OAAO,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,gBAAgB,CAAC,OAA8B;QACpD,MAAM,IAAI,GAAG,IAAA,sBAAW,EAAC,OAAO,CAAC,CAAC;QAClC,MAAM,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC3C,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;YACjC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,0BAAW,CAAC,KAAK,CAAC,gBAAgB,EAAE,IAAA,uBAAY,EAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;SACxF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAhBD,8DAgBC","sourcesContent":["import { DataFactory } from 'n3';\nimport type { Quad, Quad_Subject } from 'rdf-js';\nimport { toNamedTerm, toObjectTerm } from '../TermUtil';\nimport { SOLID_ERROR } from '../Vocabularies';\nimport type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\nimport quad = DataFactory.quad;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(405, 'MethodNotAllowedHttpError');\n\n/**\n * An error thrown when data was found for the requested identifier, but is not supported by the target resource.\n * Can keep track of the methods that are not allowed.\n */\nexport class MethodNotAllowedHttpError extends BaseHttpError {\n  public readonly methods: Readonly<string[]>;\n\n  public constructor(methods: string[] = [], message?: string, options?: HttpErrorOptions) {\n    super(message ?? `${methods} are not allowed.`, options);\n    this.methods = methods;\n  }\n\n  public generateMetadata(subject: Quad_Subject | string): Quad[] {\n    const term = toNamedTerm(subject);\n    const quads = super.generateMetadata(term);\n    for (const method of this.methods) {\n      quads.push(quad(term, SOLID_ERROR.terms.disallowedMethod, toObjectTerm(method, true)));\n    }\n    return quads;\n  }\n}\n"]}