{"version":3,"file":"NotImplementedHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/NotImplementedHttpError.ts"],"names":[],"mappings":";;;AACA,2CAAqD;AAErD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,yBAAyB,CAAC,CAAC;AAE7E;;;GAGG;AACH,MAAa,uBAAwB,SAAQ,aAAa;IACxD,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1B,CAAC;CACF;AAJD,0DAIC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(501, 'NotImplementedHttpError');\n\n/**\n * The server either does not recognize the request method, or it lacks the ability to fulfil the request.\n * Usually this implies future availability (e.g., a new feature of a web-service API).\n */\nexport class NotImplementedHttpError extends BaseHttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(message, options);\n  }\n}\n"]}