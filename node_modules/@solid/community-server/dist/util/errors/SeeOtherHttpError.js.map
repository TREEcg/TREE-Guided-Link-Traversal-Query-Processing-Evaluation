{"version":3,"file":"SeeOtherHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/SeeOtherHttpError.ts"],"names":[],"mappings":";;;AACA,2DAAqE;AAErE,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kDAA8B,EAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;AAE/E;;;;GAIG;AACH,MAAa,iBAAkB,SAAQ,aAAa;IAClD,YAAmB,QAAgB,EAAE,OAAgB,EAAE,OAA0B;QAC/E,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACpC,CAAC;CACF;AAJD,8CAIC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateRedirectHttpErrorClass } from './RedirectHttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateRedirectHttpErrorClass(303, 'SeeOtherHttpError');\n\n/**\n * Error used to redirect not to the requested resource itself, but to another page,\n * for example a representation of a real-world object.\n * The method used to display this redirected page is always GET.\n */\nexport class SeeOtherHttpError extends BaseHttpError {\n  public constructor(location: string, message?: string, options?: HttpErrorOptions) {\n    super(location, message, options);\n  }\n}\n"]}