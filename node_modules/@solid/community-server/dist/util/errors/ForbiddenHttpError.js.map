{"version":3,"file":"ForbiddenHttpError.js","sourceRoot":"","sources":["../../../src/util/errors/ForbiddenHttpError.ts"],"names":[],"mappings":";;;AACA,2CAAqD;AAErD,gEAAgE;AAChE,MAAM,aAAa,GAAG,IAAA,kCAAsB,EAAC,GAAG,EAAE,oBAAoB,CAAC,CAAC;AAExE;;GAEG;AACH,MAAa,kBAAmB,SAAQ,aAAa;IACnD,YAAmB,OAAgB,EAAE,OAA0B;QAC7D,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1B,CAAC;CACF;AAJD,gDAIC","sourcesContent":["import type { HttpErrorOptions } from './HttpError';\nimport { generateHttpErrorClass } from './HttpError';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst BaseHttpError = generateHttpErrorClass(403, 'ForbiddenHttpError');\n\n/**\n * An error thrown when an agent is not allowed to access data.\n */\nexport class ForbiddenHttpError extends BaseHttpError {\n  public constructor(message?: string, options?: HttpErrorOptions) {\n    super(message, options);\n  }\n}\n"]}