{"version":3,"file":"IdentifierMap.js","sourceRoot":"","sources":["../../../src/util/map/IdentifierMap.ts"],"names":[],"mappings":";;;AACA,uCAAoC;AACpC,6DAA0D;AAE1D;;GAEG;AACH,SAAgB,gBAAgB,CAAC,UAA8B;IAC7D,OAAO,UAAU,CAAC,IAAI,CAAC;AACzB,CAAC;AAFD,4CAEC;AAED;;GAEG;AACH,MAAa,aAAiB,SAAQ,iBAA8B;IAClE,YAAmB,QAAqD;QACtE,KAAK,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;IACpC,CAAC;CACF;AAJD,sCAIC;AAED;;GAEG;AACH,MAAa,qBAAyB,SAAQ,uCAAyC;IACrF,YAAmB,QAAsE;QACvF,KAAK,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IACjC,CAAC;CACF;AAJD,sDAIC","sourcesContent":["import type { ResourceIdentifier } from '../../http/representation/ResourceIdentifier';\nimport { HashMap } from './HashMap';\nimport { WrappedSetMultiMap } from './WrappedSetMultiMap';\n\n/**\n * Converts a {@link ResourceIdentifier} into a string unique to that identifier.\n */\nexport function identifierHashFn(identifier: ResourceIdentifier): string {\n  return identifier.path;\n}\n\n/**\n * A specific implementation of {@link HashMap} where the key type is {@link ResourceIdentifier}.\n */\nexport class IdentifierMap<T> extends HashMap<ResourceIdentifier, T> {\n  public constructor(iterable?: Iterable<readonly [ResourceIdentifier, T]>) {\n    super(identifierHashFn, iterable);\n  }\n}\n\n/**\n * A specific implementation of {@link WrappedSetMultiMap} where the key type is {@link ResourceIdentifier}.\n */\nexport class IdentifierSetMultiMap<T> extends WrappedSetMultiMap<ResourceIdentifier, T> {\n  public constructor(iterable?: Iterable<readonly [ResourceIdentifier, T | ReadonlySet<T>]>) {\n    super(IdentifierMap, iterable);\n  }\n}\n"]}