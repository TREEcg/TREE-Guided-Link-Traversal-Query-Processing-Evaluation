{"version":3,"file":"StringUtil.js","sourceRoot":"","sources":["../../src/util/StringUtil.ts"],"names":[],"mappings":";;;AAAA;;;;;;GAMG;AACH,SAAgB,mBAAmB,CAAC,KAAa;IAC/C,OAAO,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACjC,CAAC;AAFD,kDAEC;AAED;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,OAAe;IAC7C,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACtC,CAAC;AAFD,0CAEC;AAED;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,IAAY;IAC1C,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjC,CAAC;AAFD,0CAEC","sourcesContent":["/**\n * Splits a string by comma.\n *\n * @param input - String instance to split.\n *\n * @returns A String array containining the split parts.\n */\nexport function splitCommaSeparated(input: string): string[] {\n  return input.split(/\\s*,\\s*/u);\n}\n\n/**\n * Sanitizes part of a URL by replacing non-word content with a '-'.\n *\n * @param urlPart - The URL part to sanitize.\n * @returns The sanitized output.\n */\nexport function sanitizeUrlPart(urlPart: string): string {\n  return urlPart.replace(/\\W/gu, '-');\n}\n\n/**\n * Checks the validity of a file name. A valid name consists of word characters, '-' or '.'.\n *\n * @param name - The name of the file to validate.\n * @returns True if the filename is valid, false otherwise.\n */\nexport function isValidFileName(name: string): boolean {\n  return /^[\\w.-]+$/u.test(name);\n}\n"]}