{"version":3,"file":"StaticThrowHandler.js","sourceRoot":"","sources":["../../../src/util/handlers/StaticThrowHandler.ts"],"names":[],"mappings":";;;AACA,iDAA8C;AAE9C;;GAEG;AACH,MAAa,kBAAmB,SAAQ,2BAAwB;IAG9D,YAAmB,KAAgB;QACjC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;IAEM,KAAK,CAAC,MAAM;QACjB,MAAM,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;CACF;AAXD,gDAWC","sourcesContent":["import type { HttpError } from '../errors/HttpError';\nimport { AsyncHandler } from './AsyncHandler';\n\n/**\n * Utility handler that can handle all input and always throws the given error.\n */\nexport class StaticThrowHandler extends AsyncHandler<any, never> {\n  private readonly error: HttpError;\n\n  public constructor(error: HttpError) {\n    super();\n    this.error = error;\n  }\n\n  public async handle(): Promise<never> {\n    throw this.error;\n  }\n}\n"]}