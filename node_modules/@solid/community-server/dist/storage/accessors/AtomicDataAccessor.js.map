{"version":3,"file":"AtomicDataAccessor.js","sourceRoot":"","sources":["../../../src/storage/accessors/AtomicDataAccessor.ts"],"names":[],"mappings":"","sourcesContent":["import type { DataAccessor } from './DataAccessor';\n\n/**\n * The AtomicDataAccessor interface has identical function signatures as\n * the DataAccessor, with the additional constraint that every function call\n * must be atomic in its effect: either the call fully succeeds, reaching the\n * desired new state; or it fails, upon which the resulting state remains\n * identical to the one before the call.\n */\nexport interface AtomicDataAccessor extends DataAccessor { }\n"]}