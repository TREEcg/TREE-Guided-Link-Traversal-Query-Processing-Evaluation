{"version":3,"file":"GlobalQuotaStrategy.js","sourceRoot":"","sources":["../../../src/storage/quota/GlobalQuotaStrategy.ts"],"names":[],"mappings":";;;AAEA,mDAAgD;AAEhD;;GAEG;AACH,MAAa,mBAAoB,SAAQ,6BAAa;IAGpD,YAAmB,KAAW,EAAE,QAA2B,EAAE,IAAY;QACvE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAES,KAAK,CAAC,iBAAiB;QAC/B,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;CACF;AAXD,kDAWC","sourcesContent":["import type { Size } from '../size-reporter/Size';\nimport type { SizeReporter } from '../size-reporter/SizeReporter';\nimport { QuotaStrategy } from './QuotaStrategy';\n\n/**\n * The GlobalQuotaStrategy sets a limit on the amount of data stored on the server globally.\n */\nexport class GlobalQuotaStrategy extends QuotaStrategy {\n  private readonly base: string;\n\n  public constructor(limit: Size, reporter: SizeReporter<any>, base: string) {\n    super(reporter, limit);\n    this.base = base;\n  }\n\n  protected async getTotalSpaceUsed(): Promise<Size> {\n    return this.reporter.getSize({ path: this.base });\n  }\n}\n"]}