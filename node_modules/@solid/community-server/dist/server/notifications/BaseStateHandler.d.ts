import type { NotificationHandler } from './NotificationHandler';
import { StateHandler } from './StateHandler';
import type { SubscriptionInfo, SubscriptionStorage } from './SubscriptionStorage';
/**
 * Handles the `state` feature by calling a {@link NotificationHandler}
 * in case the {@link SubscriptionInfo} has a `state` value.
 *
 * Deletes the `state` parameter from the info afterwards.
 */
export declare class BaseStateHandler extends StateHandler {
    protected readonly logger: import("../..").Logger;
    private readonly handler;
    private readonly storage;
    constructor(handler: NotificationHandler, storage: SubscriptionStorage);
    handle({ info }: {
        info: SubscriptionInfo;
    }): Promise<void>;
}
