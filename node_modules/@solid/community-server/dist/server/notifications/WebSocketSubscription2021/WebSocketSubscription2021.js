"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketSubscription2021 = void 0;
const yup_1 = require("yup");
const Permissions_1 = require("../../../authorization/permissions/Permissions");
const BasicRepresentation_1 = require("../../../http/representation/BasicRepresentation");
const LogUtil_1 = require("../../../logging/LogUtil");
const ContentTypes_1 = require("../../../util/ContentTypes");
const IdentifierMap_1 = require("../../../util/map/IdentifierMap");
const Notification_1 = require("../Notification");
const Subscription_1 = require("../Subscription");
const type = 'WebSocketSubscription2021';
const schema = Subscription_1.SUBSCRIBE_SCHEMA.shape({
    type: (0, yup_1.string)().required().oneOf([type]),
});
/**
 * The notification subscription type WebSocketSubscription2021 as described in
 * https://solidproject.org/TR/websocket-subscription-2021
 *
 * Requires read permissions on a resource to be able to receive notifications.
 */
class WebSocketSubscription2021 {
    constructor(storage, route) {
        this.logger = (0, LogUtil_1.getLoggerFor)(this);
        this.type = type;
        this.schema = schema;
        this.storage = storage;
        this.path = route.getPath();
    }
    async extractModes(subscription) {
        return new IdentifierMap_1.IdentifierSetMultiMap([[{ path: subscription.topic }, Permissions_1.AccessMode.read]]);
    }
    async subscribe(subscription) {
        const info = this.storage.create(subscription, {});
        await this.storage.add(info);
        const jsonld = {
            '@context': [Notification_1.CONTEXT_NOTIFICATION],
            type: this.type,
            source: `ws${this.path.slice('http'.length)}?auth=${encodeURI(info.id)}`,
        };
        const response = new BasicRepresentation_1.BasicRepresentation(JSON.stringify(jsonld), ContentTypes_1.APPLICATION_LD_JSON);
        return { response, info };
    }
}
exports.WebSocketSubscription2021 = WebSocketSubscription2021;
//# sourceMappingURL=WebSocketSubscription2021.js.map