/// <reference types="node" />
import type { IncomingMessage } from 'http';
import type { WebSocket } from 'ws';
import type { InteractionRoute } from '../../../identity/interaction/routing/InteractionRoute';
import { WebSocketServerListener } from '../../WebSocketServerListener';
import type { SubscriptionStorage } from '../SubscriptionStorage';
import type { WebSocket2021Handler } from './WebSocket2021Handler';
/**
 * Listens for WebSocket connections and verifies if they are valid WebSocketSubscription2021 connections,
 * in which case its {@link WebSocket2021Handler} will be alerted.
 */
export declare class WebSocket2021Listener extends WebSocketServerListener {
    protected readonly logger: import("../../..").Logger;
    private readonly storage;
    private readonly handler;
    private readonly path;
    constructor(storage: SubscriptionStorage, handler: WebSocket2021Handler, route: InteractionRoute);
    protected handleConnection(webSocket: WebSocket, upgradeRequest: IncomingMessage): Promise<void>;
}
