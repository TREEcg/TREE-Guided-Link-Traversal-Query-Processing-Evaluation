"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationDescriber = exports.DEFAULT_NOTIFICATION_FEATURES = void 0;
const n3_1 = require("n3");
const Vocabularies_1 = require("../../util/Vocabularies");
const StorageDescriber_1 = require("../description/StorageDescriber");
const { namedNode, quad } = n3_1.DataFactory;
exports.DEFAULT_NOTIFICATION_FEATURES = [
    Vocabularies_1.NOTIFY.accept,
    Vocabularies_1.NOTIFY.expiration,
    Vocabularies_1.NOTIFY.rate,
    Vocabularies_1.NOTIFY.state,
];
/**
 * Outputs quads describing how to access a specific Notification Subscription type and its features,
 * as described in https://solidproject.org/TR/notifications-protocol#discovery.
 */
class NotificationDescriber extends StorageDescriber_1.StorageDescriber {
    /**
     * @param route - The route describing where the subscription target is.
     * @param relative - Will be appended to the input path to generate a named node corresponding to the description.
     *                   E.g., "#websocketNotification".
     * @param type - The rdf:type of the subscription type.
     * @param features - Which features are enabled for this subscription type. Defaults to accept/expiration/rate/state.
     */
    constructor(route, relative, type, features = exports.DEFAULT_NOTIFICATION_FEATURES) {
        super();
        this.path = namedNode(route.getPath());
        this.relative = relative;
        this.type = namedNode(type);
        this.features = features.map(namedNode);
    }
    async handle(input) {
        const subject = namedNode(input.path);
        const subscription = namedNode(`${input.path}${this.relative}`);
        return [
            quad(subject, Vocabularies_1.NOTIFY.terms.notificationChannel, subscription),
            quad(subscription, Vocabularies_1.RDF.terms.type, this.type),
            quad(subscription, Vocabularies_1.NOTIFY.terms.subscription, this.path),
            ...this.features.map((feature) => quad(subscription, Vocabularies_1.NOTIFY.terms.feature, feature)),
        ];
    }
}
exports.NotificationDescriber = NotificationDescriber;
//# sourceMappingURL=NotificationDescriber.js.map