{"version":3,"file":"WebHookDescriber.js","sourceRoot":"","sources":["../../../../src/server/notifications/WebHookSubscription2021/WebHookDescriber.ts"],"names":[],"mappings":";;;AACA,2BAAiC;AAIjC,6DAAyD;AACzD,oEAAgG;AAChG,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,gBAAW,CAAC;AASxC;;;;GAIG;AACH,MAAa,gBAAiB,SAAQ,6CAAqB;IAGzD,YAAmB,IAAiC;QAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,IAAI,CAAE,GAAG,qDAA6B,CAAE,CAAC;QACvE,QAAQ,CAAC,IAAI,CAAC,qBAAM,CAAC,WAAW,CAAC,CAAC;QAClC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,qBAAM,CAAC,uBAAuB,EAAE,QAAQ,CAAC,CAAC;QAE3E,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC;IACpD,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAAyB;QAC3C,MAAM,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAExC,wCAAwC;QACxC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,EAAW,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,kBAAG,CAAC,KAAK,CAAC,IAAI,CAAC;YACpF,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC;QAC7D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAS,CAAC,OAAO,EAAE,qBAAM,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAEpE,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AArBD,4CAqBC","sourcesContent":["import type { NamedNode } from '@rdfjs/types';\nimport { DataFactory } from 'n3';\nimport type { Quad } from 'rdf-js';\nimport type { ResourceIdentifier } from '../../../http/representation/ResourceIdentifier';\nimport type { InteractionRoute } from '../../../identity/interaction/routing/InteractionRoute';\nimport { NOTIFY, RDF } from '../../../util/Vocabularies';\nimport { DEFAULT_NOTIFICATION_FEATURES, NotificationDescriber } from '../NotificationDescriber';\nconst { namedNode, quad } = DataFactory;\n\nexport interface WebHookStorageDescriberArgs {\n  route: InteractionRoute;\n  relative: string;\n  webIdRoute: InteractionRoute;\n  features?: string[];\n}\n\n/**\n * Handles the necessary triples for describing a WebHookSubcription2021 notification channel.\n *\n * Extends {@link NotificationDescriber} by adding the necessary `notify:webid` and `notify:webhookAuth` triples.\n */\nexport class WebHookDescriber extends NotificationDescriber {\n  private readonly webId: NamedNode;\n\n  public constructor(args: WebHookStorageDescriberArgs) {\n    const features = args.features ?? [ ...DEFAULT_NOTIFICATION_FEATURES ];\n    features.push(NOTIFY.webhookAuth);\n    super(args.route, args.relative, NOTIFY.WebHookSubscription2021, features);\n\n    this.webId = namedNode(args.webIdRoute.getPath());\n  }\n\n  public async handle(input: ResourceIdentifier): Promise<Quad[]> {\n    const quads = await super.handle(input);\n\n    // Find the notification channel subject\n    const typeQuad = quads.find((entry): boolean => entry.predicate.equals(RDF.terms.type) &&\n      entry.object.equals(NOTIFY.terms.WebHookSubscription2021));\n    quads.push(quad(typeQuad!.subject, NOTIFY.terms.webid, this.webId));\n\n    return quads;\n  }\n}\n"]}