import type { JwkGenerator } from '../../../identity/configuration/JwkGenerator';
import type { InteractionRoute } from '../../../identity/interaction/routing/InteractionRoute';
import type { NotificationEmitterInput } from '../NotificationEmitter';
import { NotificationEmitter } from '../NotificationEmitter';
import type { WebHookFeatures } from './WebHookSubscription2021';
/**
 * Emits a notification representation using the WebHookSubscription2021 specification.
 *
 * Generates a DPoP token and proof, and adds those to the HTTP request that is sent to the target.
 *
 * The `expiration` input parameter is how long the generated token should be valid in minutes.
 * Default is 20.
 */
export declare class WebHookEmitter extends NotificationEmitter<WebHookFeatures> {
    protected readonly logger: import("../../..").Logger;
    private readonly issuer;
    private readonly webId;
    private readonly jwkGenerator;
    private readonly expiration;
    constructor(baseUrl: string, webIdRoute: InteractionRoute, jwkGenerator: JwkGenerator, expiration?: number);
    handle({ info, representation }: NotificationEmitterInput<WebHookFeatures>): Promise<void>;
}
