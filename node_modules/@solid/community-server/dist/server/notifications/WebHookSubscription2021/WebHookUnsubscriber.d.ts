import type { CredentialsExtractor } from '../../../authentication/CredentialsExtractor';
import type { ResponseDescription } from '../../../http/output/response/ResponseDescription';
import type { OperationHttpHandlerInput } from '../../OperationHttpHandler';
import { OperationHttpHandler } from '../../OperationHttpHandler';
import type { SubscriptionStorage } from '../SubscriptionStorage';
import type { WebHookFeatures } from './WebHookSubscription2021';
/**
 * Allows clients to unsubscribe from a WebHookSubscription2021.
 * Assumed the trailing part of the incoming URL is the identifier of the subscription.
 * Should be wrapped in a route handler that only allows `DELETE` operations.
 */
export declare class WebHookUnsubscriber extends OperationHttpHandler {
    protected readonly logger: import("../../..").Logger;
    private readonly credentialsExtractor;
    private readonly storage;
    constructor(credentialsExtractor: CredentialsExtractor, storage: SubscriptionStorage<WebHookFeatures>);
    handle({ operation, request }: OperationHttpHandlerInput): Promise<ResponseDescription>;
}
