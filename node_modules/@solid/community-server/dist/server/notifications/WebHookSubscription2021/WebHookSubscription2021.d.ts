import type { InferType } from 'yup';
import type { Credentials } from '../../../authentication/Credentials';
import type { AccessMap } from '../../../authorization/permissions/Permissions';
import type { InteractionRoute } from '../../../identity/interaction/routing/InteractionRoute';
import type { StateHandler } from '../StateHandler';
import type { SubscriptionStorage } from '../SubscriptionStorage';
import type { SubscriptionResponse, SubscriptionType } from '../SubscriptionType';
declare const schema: import("yup").ObjectSchema<import("yup/lib/object").Assign<{
    '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
}, {
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
}>, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<import("yup/lib/object").Assign<{
    '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
}, {
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
}>>, import("yup/lib/object").AssertsShape<import("yup/lib/object").Assign<{
    '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
    accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
}, {
    type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
}>>>;
export declare type WebHookFeatures = {
    target: string;
    webId: string;
};
/**
 * The notification subscription type WebHookSubscription2021 as described in
 * https://github.com/solid/notifications/blob/main/webhook-subscription-2021.md
 *
 * Requires read permissions on a resource to be able to receive notifications.
 *
 * Also handles the `state` feature if present.
 */
export declare class WebHookSubscription2021 implements SubscriptionType<typeof schema, WebHookFeatures> {
    protected readonly logger: import("../../..").Logger;
    private readonly storage;
    private readonly unsubscribePath;
    private readonly stateHandler;
    readonly type = "WebHookSubscription2021";
    readonly schema: import("yup").ObjectSchema<import("yup/lib/object").Assign<{
        '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
        expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }, {
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    }>, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<import("yup/lib/object").Assign<{
        '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
        expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }, {
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    }>>, import("yup/lib/object").AssertsShape<import("yup/lib/object").Assign<{
        '@context': import("yup/lib/array").RequiredArraySchema<import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>, import("yup/lib/types").AnyObject, (string | undefined)[] | undefined>;
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        topic: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        state: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
        expiration: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        rate: import("yup").NumberSchema<number | undefined, import("yup/lib/types").AnyObject, number | undefined>;
        accept: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }, {
        type: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
        target: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    }>>>;
    constructor(storage: SubscriptionStorage<WebHookFeatures>, unsubscribeRoute: InteractionRoute, stateHandler: StateHandler);
    extractModes(subscription: InferType<typeof schema>): Promise<AccessMap>;
    subscribe(subscription: InferType<typeof schema>, credentials: Credentials): Promise<SubscriptionResponse<WebHookFeatures>>;
}
export {};
