{"version":3,"file":"WebHookWebId.js","sourceRoot":"","sources":["../../../../src/server/notifications/WebHookSubscription2021/WebHookWebId.ts"],"names":[],"mappings":";;;AAAA,+FAA4F;AAE5F,0FAAuF;AACvF,6DAAyD;AACzD,qDAA6D;AAE7D,qEAAkE;AAElE;;;;;;GAMG;AACH,MAAa,YAAa,SAAQ,2CAAoB;IAGpD,YAAmB,OAAe;QAChC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,IAAA,8BAAmB,EAAC,OAAO,CAAC,CAAC;IAC7C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAAgC;QAClD,MAAM,KAAK,GAAG;uBACK,IAAI,CAAC,MAAM,IAAI,CAAC;QAEnC,MAAM,cAAc,GAAG,IAAI,yCAAmB,CAAC,KAAK,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,0BAAW,CAAC,CAAC;QAC3F,OAAO,IAAI,6CAAqB,CAAC,cAAc,CAAC,QAAQ,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;IACjF,CAAC;CACF;AAfD,oCAeC","sourcesContent":["import { OkResponseDescription } from '../../../http/output/response/OkResponseDescription';\nimport type { ResponseDescription } from '../../../http/output/response/ResponseDescription';\nimport { BasicRepresentation } from '../../../http/representation/BasicRepresentation';\nimport { TEXT_TURTLE } from '../../../util/ContentTypes';\nimport { trimTrailingSlashes } from '../../../util/PathUtil';\nimport type { OperationHttpHandlerInput } from '../../OperationHttpHandler';\nimport { OperationHttpHandler } from '../../OperationHttpHandler';\n\n/**\n * The WebHookSubscription2021 requires the server to have a WebID\n * that is used during the generation of the DPoP headers.\n * There are no real specifications about what this should contain or look like,\n * so we just return a turtle document that contains a solid:oidcIssuer triple for now.\n * This way we confirm that our server was allowed to sign the token.\n */\nexport class WebHookWebId extends OperationHttpHandler {\n  private readonly issuer: string;\n\n  public constructor(baseUrl: string) {\n    super();\n    this.issuer = trimTrailingSlashes(baseUrl);\n  }\n\n  public async handle(input: OperationHttpHandlerInput): Promise<ResponseDescription> {\n    const webId = `@prefix solid: <http://www.w3.org/ns/solid/terms#>.\n<> solid:oidcIssuer <${this.issuer}>.`;\n\n    const representation = new BasicRepresentation(webId, input.operation.target, TEXT_TURTLE);\n    return new OkResponseDescription(representation.metadata, representation.data);\n  }\n}\n"]}