"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebHookDescriber = void 0;
const n3_1 = require("n3");
const Vocabularies_1 = require("../../../util/Vocabularies");
const NotificationDescriber_1 = require("../NotificationDescriber");
const { namedNode, quad } = n3_1.DataFactory;
/**
 * Handles the necessary triples for describing a WebHookSubcription2021 notification channel.
 *
 * Extends {@link NotificationDescriber} by adding the necessary `notify:webid` and `notify:webhookAuth` triples.
 */
class WebHookDescriber extends NotificationDescriber_1.NotificationDescriber {
    constructor(args) {
        const features = args.features ?? [...NotificationDescriber_1.DEFAULT_NOTIFICATION_FEATURES];
        features.push(Vocabularies_1.NOTIFY.webhookAuth);
        super(args.route, args.relative, Vocabularies_1.NOTIFY.WebHookSubscription2021, features);
        this.webId = namedNode(args.webIdRoute.getPath());
    }
    async handle(input) {
        const quads = await super.handle(input);
        // Find the notification channel subject
        const typeQuad = quads.find((entry) => entry.predicate.equals(Vocabularies_1.RDF.terms.type) &&
            entry.object.equals(Vocabularies_1.NOTIFY.terms.WebHookSubscription2021));
        quads.push(quad(typeQuad.subject, Vocabularies_1.NOTIFY.terms.webid, this.webId));
        return quads;
    }
}
exports.WebHookDescriber = WebHookDescriber;
//# sourceMappingURL=WebHookDescriber.js.map