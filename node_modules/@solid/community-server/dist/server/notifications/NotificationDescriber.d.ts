import type { Quad } from '@rdfjs/types';
import type { ResourceIdentifier } from '../../http/representation/ResourceIdentifier';
import type { InteractionRoute } from '../../identity/interaction/routing/InteractionRoute';
import { StorageDescriber } from '../description/StorageDescriber';
export declare const DEFAULT_NOTIFICATION_FEATURES: ("http://www.w3.org/ns/solid/notifications#accept" | "http://www.w3.org/ns/solid/notifications#expiration" | "http://www.w3.org/ns/solid/notifications#rate" | "http://www.w3.org/ns/solid/notifications#state")[];
/**
 * Outputs quads describing how to access a specific Notification Subscription type and its features,
 * as described in https://solidproject.org/TR/notifications-protocol#discovery.
 */
export declare class NotificationDescriber extends StorageDescriber {
    private readonly path;
    private readonly relative;
    private readonly type;
    private readonly features;
    /**
     * @param route - The route describing where the subscription target is.
     * @param relative - Will be appended to the input path to generate a named node corresponding to the description.
     *                   E.g., "#websocketNotification".
     * @param type - The rdf:type of the subscription type.
     * @param features - Which features are enabled for this subscription type. Defaults to accept/expiration/rate/state.
     */
    constructor(route: InteractionRoute, relative: string, type: string, features?: string[]);
    handle(input: ResourceIdentifier): Promise<Quad[]>;
}
