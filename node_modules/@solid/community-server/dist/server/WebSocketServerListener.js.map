{"version":3,"file":"WebSocketServerListener.js","sourceRoot":"","sources":["../../src/server/WebSocketServerListener.ts"],"names":[],"mappings":";;;AAGA,2BAAqC;AACrC,gDAAkD;AAClD,wDAA8D;AAC9D,qDAAkD;AAElD;;;;GAIG;AACH,MAAsB,uBAAwB,SAAQ,+BAAc;IAApE;;QACqB,WAAM,GAAG,IAAA,sBAAY,EAAC,IAAI,CAAC,CAAC;IAejD,CAAC;IAbQ,KAAK,CAAC,MAAM,CAAC,MAAc;QAChC,0BAA0B;QAC1B,MAAM,eAAe,GAAG,IAAI,oBAAe,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;QAChE,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,cAA+B,EAAE,MAAc,EAAE,IAAY,EAAQ,EAAE;YAC3F,eAAe,CAAC,aAAa,CAAC,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,SAAoB,EAAQ,EAAE;gBACzF,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,KAAY,EAAQ,EAAE;oBAC5E,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,yDAAyD,IAAA,8BAAkB,EAAC,KAAK,CAAC,EAAE,CAAC,CAAC;gBAC1G,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CAGF;AAhBD,0DAgBC","sourcesContent":["import type { IncomingMessage, Server } from 'http';\nimport type { Socket } from 'net';\nimport type { WebSocket } from 'ws';\nimport { WebSocketServer } from 'ws';\nimport { getLoggerFor } from '../logging/LogUtil';\nimport { createErrorMessage } from '../util/errors/ErrorUtil';\nimport { ServerListener } from './ServerListener';\n\n/**\n * {@link ServerListener} that adds WebSocket functionality to an existing {@link Server}.\n *\n * Implementations need to implement the `handleConnection` function to receive the necessary information.\n */\nexport abstract class WebSocketServerListener extends ServerListener {\n  protected readonly logger = getLoggerFor(this);\n\n  public async handle(server: Server): Promise<void> {\n    // Create WebSocket server\n    const webSocketServer = new WebSocketServer({ noServer: true });\n    server.on('upgrade', (upgradeRequest: IncomingMessage, socket: Socket, head: Buffer): void => {\n      webSocketServer.handleUpgrade(upgradeRequest, socket, head, (webSocket: WebSocket): void => {\n        this.handleConnection(webSocket, upgradeRequest).catch((error: Error): void => {\n          this.logger.error(`Something went wrong handling a WebSocket connection: ${createErrorMessage(error)}`);\n        });\n      });\n    });\n  }\n\n  protected abstract handleConnection(webSocket: WebSocket, upgradeRequest: IncomingMessage): Promise<void>;\n}\n"]}