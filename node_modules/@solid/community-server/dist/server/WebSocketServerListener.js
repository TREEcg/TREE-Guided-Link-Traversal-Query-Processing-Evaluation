"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebSocketServerListener = void 0;
const ws_1 = require("ws");
const LogUtil_1 = require("../logging/LogUtil");
const ErrorUtil_1 = require("../util/errors/ErrorUtil");
const ServerListener_1 = require("./ServerListener");
/**
 * {@link ServerListener} that adds WebSocket functionality to an existing {@link Server}.
 *
 * Implementations need to implement the `handleConnection` function to receive the necessary information.
 */
class WebSocketServerListener extends ServerListener_1.ServerListener {
    constructor() {
        super(...arguments);
        this.logger = (0, LogUtil_1.getLoggerFor)(this);
    }
    async handle(server) {
        // Create WebSocket server
        const webSocketServer = new ws_1.WebSocketServer({ noServer: true });
        server.on('upgrade', (upgradeRequest, socket, head) => {
            webSocketServer.handleUpgrade(upgradeRequest, socket, head, (webSocket) => {
                this.handleConnection(webSocket, upgradeRequest).catch((error) => {
                    this.logger.error(`Something went wrong handling a WebSocket connection: ${(0, ErrorUtil_1.createErrorMessage)(error)}`);
                });
            });
        });
    }
}
exports.WebSocketServerListener = WebSocketServerListener;
//# sourceMappingURL=WebSocketServerListener.js.map