"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseServerFactory = void 0;
const fs_1 = require("fs");
const http_1 = require("http");
const https_1 = require("https");
const url_1 = require("url");
const LogUtil_1 = require("../logging/LogUtil");
/**
 * Creates an HTTP(S) server listening to the requested port using the native Node.js `http` module.
 *
 * The server does not do anything, listeners should be attached to add behavior.
 */
class BaseServerFactory {
    constructor(options = { https: false }) {
        this.logger = (0, LogUtil_1.getLoggerFor)(this);
        this.options = { ...options };
    }
    /**
     * Creates and starts an HTTP(S) server
     * @param port - Port on which the server listens
     */
    startServer(port) {
        const protocol = this.options.https ? 'https' : 'http';
        const url = new url_1.URL(`${protocol}://localhost:${port}/`).href;
        this.logger.info(`Listening to server at ${url}`);
        const createServer = this.options.https ? https_1.createServer : http_1.createServer;
        const options = this.createServerOptions();
        const server = createServer(options);
        return server.listen(port);
    }
    createServerOptions() {
        const options = { ...this.options };
        for (const id of ['key', 'cert', 'pfx']) {
            const val = options[id];
            if (val) {
                options[id] = (0, fs_1.readFileSync)(val, 'utf8');
            }
        }
        return options;
    }
}
exports.BaseServerFactory = BaseServerFactory;
//# sourceMappingURL=BaseServerFactory.js.map