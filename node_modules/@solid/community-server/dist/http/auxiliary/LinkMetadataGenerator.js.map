{"version":3,"file":"LinkMetadataGenerator.js","sourceRoot":"","sources":["../../../src/http/auxiliary/LinkMetadataGenerator.ts"],"names":[],"mappings":";;;AAAA,2BAAiC;AAEjC,0DAAqD;AAGrD,2DAAwD;AAExD;;;;;GAKG;AACH,MAAa,qBAAsB,SAAQ,qCAAiB;IAI1D,YAAmB,IAAY,EAAE,kBAA+C;QAC9E,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,gBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC/C,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,QAAgC;QAClD,MAAM,UAAU,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACvD,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,UAAU,CAAC,EAAE;YAC9D,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EACpB,gBAAW,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EACtF,yBAAU,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;SACtC;IACH,CAAC;CACF;AAlBD,sDAkBC","sourcesContent":["import { DataFactory } from 'n3';\nimport type { NamedNode } from 'rdf-js';\nimport { SOLID_META } from '../../util/Vocabularies';\nimport type { RepresentationMetadata } from '../representation/RepresentationMetadata';\nimport type { AuxiliaryIdentifierStrategy } from './AuxiliaryIdentifierStrategy';\nimport { MetadataGenerator } from './MetadataGenerator';\n\n/**\n * Adds a link to the auxiliary resource when called on the subject resource.\n * Specifically: <subjectId> <link> <auxiliaryId> will be added.\n *\n * In case the input is metadata of an auxiliary resource no metadata will be added\n */\nexport class LinkMetadataGenerator extends MetadataGenerator {\n  private readonly link: NamedNode;\n  private readonly identifierStrategy: AuxiliaryIdentifierStrategy;\n\n  public constructor(link: string, identifierStrategy: AuxiliaryIdentifierStrategy) {\n    super();\n    this.link = DataFactory.namedNode(link);\n    this.identifierStrategy = identifierStrategy;\n  }\n\n  public async handle(metadata: RepresentationMetadata): Promise<void> {\n    const identifier = { path: metadata.identifier.value };\n    if (!this.identifierStrategy.isAuxiliaryIdentifier(identifier)) {\n      metadata.add(this.link,\n        DataFactory.namedNode(this.identifierStrategy.getAuxiliaryIdentifier(identifier).path),\n        SOLID_META.terms.ResponseMetadata);\n    }\n  }\n}\n"]}