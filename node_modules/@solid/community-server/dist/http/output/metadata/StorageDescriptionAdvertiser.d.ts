import type { ResourceStore } from '../../../storage/ResourceStore';
import type { IdentifierStrategy } from '../../../util/identifiers/IdentifierStrategy';
import type { TargetExtractor } from '../../input/identifier/TargetExtractor';
import type { MetadataWriterInput } from './MetadataWriter';
import { MetadataWriter } from './MetadataWriter';
/**
 * Adds a link header pointing to the relevant storage description resource.
 * Recursively checks parent containers until a storage container is found,
 * and then appends the provided suffix to determine the storage description resource.
 */
export declare class StorageDescriptionAdvertiser extends MetadataWriter {
    protected readonly logger: import("../../..").Logger;
    private readonly targetExtractor;
    private readonly identifierStrategy;
    private readonly store;
    private readonly suffix;
    constructor(targetExtractor: TargetExtractor, identifierStrategy: IdentifierStrategy, store: ResourceStore, suffix: string);
    handle({ response, metadata }: MetadataWriterInput): Promise<void>;
    private findStorageRoot;
}
