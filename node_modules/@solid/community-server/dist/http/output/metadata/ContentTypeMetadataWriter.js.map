{"version":3,"file":"ContentTypeMetadataWriter.js","sourceRoot":"","sources":["../../../../src/http/output/metadata/ContentTypeMetadataWriter.ts"],"names":[],"mappings":";;;AAEA,qDAAkD;AAElD;;GAEG;AACH,MAAa,yBAA0B,SAAQ,+BAAc;IACpD,KAAK,CAAC,MAAM,CAAC,KAAmE;QACrF,MAAM,EAAE,iBAAiB,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC7C,IAAI,iBAAiB,EAAE;YACrB,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,cAAc,EAAE,iBAAiB,CAAC,mBAAmB,EAAE,CAAC,CAAC;SACnF;IACH,CAAC;CACF;AAPD,8DAOC","sourcesContent":["import type { HttpResponse } from '../../../server/HttpResponse';\nimport type { RepresentationMetadata } from '../../representation/RepresentationMetadata';\nimport { MetadataWriter } from './MetadataWriter';\n\n/**\n * Adds the `Content-Type` header containing value and parameters (if available).\n */\nexport class ContentTypeMetadataWriter extends MetadataWriter {\n  public async handle(input: { response: HttpResponse; metadata: RepresentationMetadata }): Promise<void> {\n    const { contentTypeObject } = input.metadata;\n    if (contentTypeObject) {\n      input.response.setHeader('Content-Type', contentTypeObject.toHeaderValueString());\n    }\n  }\n}\n"]}