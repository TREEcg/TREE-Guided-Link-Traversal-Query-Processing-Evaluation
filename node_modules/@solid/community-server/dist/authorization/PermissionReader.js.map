{"version":3,"file":"PermissionReader.js","sourceRoot":"","sources":["../../src/authorization/PermissionReader.ts"],"names":[],"mappings":";;;AACA,gEAA6D;AAe7D;;;;GAIG;AACH,MAAsB,gBAAiB,SAAQ,2BAAkD;CAAG;AAApG,4CAAoG","sourcesContent":["import type { CredentialSet } from '../authentication/Credentials';\nimport { AsyncHandler } from '../util/handlers/AsyncHandler';\nimport type { AccessMap, PermissionMap } from './permissions/Permissions';\n\nexport interface PermissionReaderInput {\n  /**\n   * Credentials of the entity requesting access to resources.\n   */\n  credentials: CredentialSet;\n  /**\n   * For each credential, the reader will check which of the given per-resource access modes are available.\n   * However, non-exhaustive information about other access modes and resources can still be returned.\n   */\n  requestedModes: AccessMap;\n}\n\n/**\n * Discovers the permissions of the given credentials on the given identifier.\n * In case the reader finds no permission for the requested identifiers and credentials\n * it can return an empty or incomplete map.\n */\nexport abstract class PermissionReader extends AsyncHandler<PermissionReaderInput, PermissionMap> {}\n"]}