{"version":3,"file":"Permissions.js","sourceRoot":"","sources":["../../../src/authorization/permissions/Permissions.ts"],"names":[],"mappings":";;;AAGA;;GAEG;AACH,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,2BAAa,CAAA;IACb,+BAAiB,CAAA;IACjB,6BAAe,CAAA;IACf,+BAAiB,CAAA;IACjB,+BAAiB,CAAA;AACnB,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB","sourcesContent":["import type { CredentialGroup } from '../../authentication/Credentials';\nimport type { IdentifierMap, IdentifierSetMultiMap } from '../../util/map/IdentifierMap';\n\n/**\n * Different modes that require permission.\n */\nexport enum AccessMode {\n  read = 'read',\n  append = 'append',\n  write = 'write',\n  create = 'create',\n  delete = 'delete',\n}\n\n/**\n * Access modes per identifier.\n */\nexport type AccessMap = IdentifierSetMultiMap<AccessMode>;\n\n/**\n * A data interface indicating which permissions are required (based on the context).\n */\nexport type Permission = Partial<Record<AccessMode, boolean>>;\n\n/**\n * Permission per CredentialGroup.\n */\nexport type PermissionSet = Partial<Record<CredentialGroup, Permission>>;\n\n/**\n * PermissionSet per identifier.\n */\nexport type PermissionMap = IdentifierMap<PermissionSet>;\n"]}