{"version":3,"file":"BaseUrlVerifier.js","sourceRoot":"","sources":["../../src/init/BaseUrlVerifier.ts"],"names":[],"mappings":";;;AAAA,gDAAkD;AAElD,+CAA4C;AAE5C;;;GAGG;AACH,MAAa,eAAgB,SAAQ,yBAAW;IAO9C,YAAmB,OAAe,EAAE,UAAkB,EAAE,OAAwC;QAC9F,KAAK,EAAE,CAAC;QAHO,WAAM,GAAG,IAAA,sBAAY,EAAC,IAAI,CAAC,CAAC;QAI3C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAEM,KAAK,CAAC,MAAM;QACjB,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,aAAa,IAAI,IAAI,CAAC,OAAO,KAAK,aAAa,EAAE;YACnD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kDAAkD,IAAI,CAAC,OACxE,yCAAyC,aACzC,2GAA2G,CAAC,CAAC;SAC9G;QACD,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACxD,CAAC;CACF;AAvBD,0CAuBC","sourcesContent":["import { getLoggerFor } from '../logging/LogUtil';\nimport type { KeyValueStorage } from '../storage/keyvalue/KeyValueStorage';\nimport { Initializer } from './Initializer';\n\n/**\n * Stores the `baseUrl` value that was used to start the server\n * and warns the user in case it differs from the previous one.\n */\nexport class BaseUrlVerifier extends Initializer {\n  private readonly baseUrl: string;\n  private readonly storageKey: string;\n  private readonly storage: KeyValueStorage<string, string>;\n\n  private readonly logger = getLoggerFor(this);\n\n  public constructor(baseUrl: string, storageKey: string, storage: KeyValueStorage<string, string>) {\n    super();\n    this.baseUrl = baseUrl;\n    this.storageKey = storageKey;\n    this.storage = storage;\n  }\n\n  public async handle(): Promise<void> {\n    const previousValue = await this.storage.get(this.storageKey);\n    if (previousValue && this.baseUrl !== previousValue) {\n      this.logger.warn(`The server is being started with a base URL of ${this.baseUrl\n      } while it was previously started with ${previousValue\n      }. Resources generated with the previous server instance, such as a WebID, might no longer work correctly.`);\n    }\n    await this.storage.set(this.storageKey, this.baseUrl);\n  }\n}\n"]}