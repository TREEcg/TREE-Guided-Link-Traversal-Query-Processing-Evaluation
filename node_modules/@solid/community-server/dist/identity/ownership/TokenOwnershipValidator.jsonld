{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^5.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@solid/community-server",
  "components": [
    {
      "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator",
      "@type": "Class",
      "requireElement": "TokenOwnershipValidator",
      "extends": [
        "css:dist/identity/ownership/OwnershipValidator.jsonld#OwnershipValidator"
      ],
      "comment": "Validates ownership of a WebId by seeing if a specific triple can be added. `expiration` parameter is how long the token should be valid in minutes.",
      "parameters": [
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator_expiration",
          "range": {
            "@type": "ParameterRangeUnion",
            "parameterRangeElements": [
              "xsd:number",
              {
                "@type": "ParameterRangeUndefined"
              }
            ]
          }
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator_storage",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "css:dist/storage/keyvalue/ExpiringStorage.jsonld#ExpiringStorage",
            "genericTypeInstances": [
              "xsd:string",
              "xsd:string"
            ]
          }
        }
      ],
      "memberFields": [
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_logger",
          "memberFieldName": "logger",
          "range": {
            "@type": "ParameterRangeWildcard"
          }
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_storage",
          "memberFieldName": "storage"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_expiration",
          "memberFieldName": "expiration"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_handle",
          "memberFieldName": "handle"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_getTokenKey",
          "memberFieldName": "getTokenKey"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_generateToken",
          "memberFieldName": "generateToken"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_hasToken",
          "memberFieldName": "hasToken"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator__member_throwError",
          "memberFieldName": "throwError"
        }
      ],
      "constructorArguments": [
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator_storage"
        },
        {
          "@id": "css:dist/identity/ownership/TokenOwnershipValidator.jsonld#TokenOwnershipValidator_expiration"
        }
      ]
    }
  ]
}