import type { Representation } from '../../http/representation/Representation';
import type { InteractionHandlerInput } from './InteractionHandler';
import { InteractionHandler } from './InteractionHandler';
import type { InteractionRoute } from './routing/InteractionRoute';
/**
 * Adds `controls` and `apiVersion` fields to the output of its source handler,
 * such that clients can predictably find their way to other resources.
 * Control paths are determined by the input routes.
 */
export declare class ControlHandler extends InteractionHandler {
    private readonly source;
    private readonly controls;
    constructor(source: InteractionHandler, controls: Record<string, InteractionRoute>);
    canHandle(input: InteractionHandlerInput): Promise<void>;
    handle(input: InteractionHandlerInput): Promise<Representation>;
}
