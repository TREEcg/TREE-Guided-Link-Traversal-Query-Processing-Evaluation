{"version":3,"file":"LocationInteractionHandler.js","sourceRoot":"","sources":["../../../src/identity/interaction/LocationInteractionHandler.ts"],"names":[],"mappings":";;;AAAA,uFAAoF;AAEpF,0DAA2D;AAC3D,2EAAwE;AAExE,6DAA0D;AAE1D;;;;;;;;;;;;;;;;GAgBG;AACH,MAAa,0BAA2B,SAAQ,uCAAkB;IAGhE,YAAmB,MAA0B;QAC3C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,KAA8B;QACnD,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAA8B;QAChD,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACxC;QAAC,OAAO,KAAc,EAAE;YACvB,IAAI,qCAAiB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;gBACvC,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;gBAC1D,OAAO,IAAI,yCAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,+BAAgB,CAAC,CAAC;aAChF;YACD,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CACF;AAvBD,gEAuBC","sourcesContent":["import { BasicRepresentation } from '../../http/representation/BasicRepresentation';\nimport type { Representation } from '../../http/representation/Representation';\nimport { APPLICATION_JSON } from '../../util/ContentTypes';\nimport { RedirectHttpError } from '../../util/errors/RedirectHttpError';\nimport type { InteractionHandlerInput } from './InteractionHandler';\nimport { InteractionHandler } from './InteractionHandler';\n\n/**\n * Transforms an HTTP redirect into a hypermedia document with a redirection link,\n * such that scripts running in a browser can redirect the user to the next page.\n *\n * This handler addresses the situation where:\n * - the user visits a first page\n * - this first page contains a script that performs interactions with a JSON API\n * - as a result of a certain interaction, the user needs to be redirected to a second page\n *\n * Regular HTTP redirects are performed via responses with 3xx status codes.\n * However, since the consumer of the API in this case is a browser script,\n * a 3xx response would only reach that script and not move the page for the user.\n *\n * Therefore, this handler changes a 3xx response into a 200 response\n * with an explicit link to the next page,\n * enabling the script to move the user to the next page.\n */\nexport class LocationInteractionHandler extends InteractionHandler {\n  private readonly source: InteractionHandler;\n\n  public constructor(source: InteractionHandler) {\n    super();\n    this.source = source;\n  }\n\n  public async canHandle(input: InteractionHandlerInput): Promise<void> {\n    await this.source.canHandle(input);\n  }\n\n  public async handle(input: InteractionHandlerInput): Promise<Representation> {\n    try {\n      return await this.source.handle(input);\n    } catch (error: unknown) {\n      if (RedirectHttpError.isInstance(error)) {\n        const body = JSON.stringify({ location: error.location });\n        return new BasicRepresentation(body, input.operation.target, APPLICATION_JSON);\n      }\n      throw error;\n    }\n  }\n}\n"]}