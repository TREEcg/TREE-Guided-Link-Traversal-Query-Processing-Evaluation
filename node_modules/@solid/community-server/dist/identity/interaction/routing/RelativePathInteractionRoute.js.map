{"version":3,"file":"RelativePathInteractionRoute.js","sourceRoot":"","sources":["../../../../src/identity/interaction/routing/RelativePathInteractionRoute.ts"],"names":[],"mappings":";;;AAAA,qDAAiD;AACjD,iFAA8E;AAG9E;;;;GAIG;AACH,MAAa,4BAA6B,SAAQ,2DAA4B;IAC5E,YAAmB,IAA+B,EAAE,YAAoB;QACtE,MAAM,GAAG,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;QAC7D,MAAM,IAAI,GAAG,IAAA,kBAAO,EAAC,GAAG,EAAE,YAAY,CAAC,CAAC;QACxC,KAAK,CAAC,IAAI,CAAC,CAAC;IACd,CAAC;CACF;AAND,oEAMC","sourcesContent":["import { joinUrl } from '../../../util/PathUtil';\nimport { AbsolutePathInteractionRoute } from './AbsolutePathInteractionRoute';\nimport type { InteractionRoute } from './InteractionRoute';\n\n/**\n * A route that is relative to another route.\n * The relative path will be joined to the input base,\n * which can either be an absolute URL or an InteractionRoute of which the path will be used.\n */\nexport class RelativePathInteractionRoute extends AbsolutePathInteractionRoute {\n  public constructor(base: InteractionRoute | string, relativePath: string) {\n    const url = typeof base === 'string' ? base : base.getPath();\n    const path = joinUrl(url, relativePath);\n    super(path);\n  }\n}\n"]}