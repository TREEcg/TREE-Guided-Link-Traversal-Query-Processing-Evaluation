{"version":3,"file":"InteractionRouteHandler.js","sourceRoot":"","sources":["../../../../src/identity/interaction/routing/InteractionRouteHandler.ts"],"names":[],"mappings":";;;AACA,8EAA2E;AAE3E,8DAA2D;AAG3D;;;;;GAKG;AACH,MAAa,uBAAwB,SAAQ,uCAAkB;IAI7D,YAAmB,KAAuB,EAAE,MAA0B;QACpE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,KAA8B;QACnD,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC;QACnC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;QAClC,IAAI,MAAM,CAAC,IAAI,KAAK,IAAI,EAAE;YACxB,MAAM,IAAI,qCAAiB,EAAE,CAAC;SAC/B;QACD,MAAM,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACrC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAA8B;QAChD,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;CACF;AAtBD,0DAsBC","sourcesContent":["import type { Representation } from '../../../http/representation/Representation';\nimport { NotFoundHttpError } from '../../../util/errors/NotFoundHttpError';\nimport type { InteractionHandlerInput } from '../InteractionHandler';\nimport { InteractionHandler } from '../InteractionHandler';\nimport type { InteractionRoute } from './InteractionRoute';\n\n/**\n * InteractionHandler that only accepts operations with an expected path.\n *\n * Rejects operations that target a different path,\n * otherwise the input parameters are passed to the source handler.\n */\nexport class InteractionRouteHandler extends InteractionHandler {\n  private readonly route: InteractionRoute;\n  private readonly source: InteractionHandler;\n\n  public constructor(route: InteractionRoute, source: InteractionHandler) {\n    super();\n    this.route = route;\n    this.source = source;\n  }\n\n  public async canHandle(input: InteractionHandlerInput): Promise<void> {\n    const { target } = input.operation;\n    const path = this.route.getPath();\n    if (target.path !== path) {\n      throw new NotFoundHttpError();\n    }\n    await this.source.canHandle(input);\n  }\n\n  public async handle(input: InteractionHandlerInput): Promise<Representation> {\n    return this.source.handle(input);\n  }\n}\n"]}