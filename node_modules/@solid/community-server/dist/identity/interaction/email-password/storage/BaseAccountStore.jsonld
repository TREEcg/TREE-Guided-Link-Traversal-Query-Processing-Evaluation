{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^5.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@solid/community-server",
  "components": [
    {
      "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore",
      "@type": "Class",
      "requireElement": "BaseAccountStore",
      "extends": [
        "css:dist/identity/interaction/email-password/storage/AccountStore.jsonld#AccountStore"
      ],
      "comment": "A EmailPasswordStore that uses a KeyValueStorage to persist its information and an ExpiringStorage to persist ForgotPassword records.  `forgotPasswordExpiration` parameter is how long the ForgotPassword record should be stored in minutes. *(defaults to 15 minutes)*",
      "parameters": [
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_saltRounds",
          "range": "xsd:number"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_forgotPasswordExpiration",
          "range": {
            "@type": "ParameterRangeUnion",
            "parameterRangeElements": [
              "xsd:number",
              {
                "@type": "ParameterRangeUndefined"
              }
            ]
          }
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_storage",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "css:dist/storage/keyvalue/KeyValueStorage.jsonld#KeyValueStorage",
            "genericTypeInstances": [
              "xsd:string",
              {
                "@type": "ParameterRangeUnion",
                "parameterRangeElements": [
                  {
                    "@type": "ParameterRangeWildcard"
                  },
                  {
                    "@type": "ParameterRangeWildcard"
                  },
                  {
                    "@type": "ParameterRangeWildcard"
                  }
                ]
              }
            ]
          }
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_forgotPasswordStorage",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "css:dist/storage/keyvalue/ExpiringStorage.jsonld#ExpiringStorage",
            "genericTypeInstances": [
              "xsd:string",
              {
                "@type": "ParameterRangeUnion",
                "parameterRangeElements": [
                  {
                    "@type": "ParameterRangeWildcard"
                  },
                  {
                    "@type": "ParameterRangeWildcard"
                  },
                  {
                    "@type": "ParameterRangeWildcard"
                  }
                ]
              }
            ]
          }
        }
      ],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_storage",
          "memberFieldName": "storage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_forgotPasswordStorage",
          "memberFieldName": "forgotPasswordStorage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_saltRounds",
          "memberFieldName": "saltRounds"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_forgotPasswordExpiration",
          "memberFieldName": "forgotPasswordExpiration"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_getAccountResourceIdentifier",
          "memberFieldName": "getAccountResourceIdentifier"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_getForgotPasswordRecordResourceIdentifier",
          "memberFieldName": "getForgotPasswordRecordResourceIdentifier"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_getAccountPayload",
          "memberFieldName": "getAccountPayload"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_authenticate",
          "memberFieldName": "authenticate"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_create",
          "memberFieldName": "create"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_verify",
          "memberFieldName": "verify"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_changePassword",
          "memberFieldName": "changePassword"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_getSettings",
          "memberFieldName": "getSettings"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_updateSettings",
          "memberFieldName": "updateSettings"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_deleteAccount",
          "memberFieldName": "deleteAccount"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_generateForgotPasswordRecord",
          "memberFieldName": "generateForgotPasswordRecord"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_getForgotPasswordRecord",
          "memberFieldName": "getForgotPasswordRecord"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore__member_deleteForgotPasswordRecord",
          "memberFieldName": "deleteForgotPasswordRecord"
        }
      ],
      "constructorArguments": [
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_storage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_forgotPasswordStorage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_saltRounds"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#BaseAccountStore_forgotPasswordExpiration"
        }
      ]
    },
    {
      "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#AccountPayload",
      "@type": "AbstractClass",
      "requireElement": "AccountPayload",
      "comment": "A payload to persist a user account",
      "parameters": [],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#AccountPayload__member_webId",
          "memberFieldName": "webId"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#AccountPayload__member_email",
          "memberFieldName": "email"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#AccountPayload__member_password",
          "memberFieldName": "password"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#AccountPayload__member_verified",
          "memberFieldName": "verified"
        }
      ],
      "constructorArguments": []
    },
    {
      "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#ForgotPasswordPayload",
      "@type": "AbstractClass",
      "requireElement": "ForgotPasswordPayload",
      "comment": "A payload to persist the fact that a user has requested to reset their password",
      "parameters": [],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#ForgotPasswordPayload__member_email",
          "memberFieldName": "email"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/storage/BaseAccountStore.jsonld#ForgotPasswordPayload__member_recordId",
          "memberFieldName": "recordId"
        }
      ],
      "constructorArguments": []
    }
  ]
}