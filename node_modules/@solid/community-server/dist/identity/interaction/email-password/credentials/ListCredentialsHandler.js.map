{"version":3,"file":"ListCredentialsHandler.js","sourceRoot":"","sources":["../../../../../src/identity/interaction/email-password/credentials/ListCredentialsHandler.ts"],"names":[],"mappings":";;;AAAA,6FAA0F;AAE1F,gEAAiE;AAGjE,6DAA0D;AAE1D;;;GAGG;AACH,MAAa,sBAAuB,SAAQ,uCAAkB;IAG5D,YAAmB,YAA0B;QAC3C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,EAA0B;QACxE,MAAM,WAAW,GAAG,CAAC,MAAM,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB,IAAI,EAAE,CAAC;QACzF,OAAO,IAAI,yCAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,SAAS,CAAC,MAAM,EAAE,+BAAgB,CAAC,CAAC;IAClG,CAAC;CACF;AAZD,wDAYC","sourcesContent":["import { BasicRepresentation } from '../../../../http/representation/BasicRepresentation';\nimport type { Representation } from '../../../../http/representation/Representation';\nimport { APPLICATION_JSON } from '../../../../util/ContentTypes';\nimport type { AccountStore } from '../storage/AccountStore';\nimport type { CredentialsHandlerInput } from './CredentialsHandler';\nimport { CredentialsHandler } from './CredentialsHandler';\n\n/**\n * Returns a list of all credential tokens associated with this account.\n * Note that this only returns the ID tokens, not the associated secrets.\n */\nexport class ListCredentialsHandler extends CredentialsHandler {\n  private readonly accountStore: AccountStore;\n\n  public constructor(accountStore: AccountStore) {\n    super();\n    this.accountStore = accountStore;\n  }\n\n  public async handle({ operation, body: { webId }}: CredentialsHandlerInput): Promise<Representation> {\n    const credentials = (await this.accountStore.getSettings(webId)).clientCredentials ?? [];\n    return new BasicRepresentation(JSON.stringify(credentials), operation.target, APPLICATION_JSON);\n  }\n}\n"]}