{
  "@context": [
    "https://linkedsoftwaredependencies.org/bundles/npm/@solid/community-server/^5.0.0/components/context.jsonld"
  ],
  "@id": "npmd:@solid/community-server",
  "components": [
    {
      "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter",
      "@type": "Class",
      "requireElement": "ClientCredentialsAdapter",
      "extends": [
        "css:dist/identity/storage/PassthroughAdapterFactory.jsonld#PassthroughAdapter"
      ],
      "comment": "A {@link PassthroughAdapter} that overrides the `find` function by checking if there are stored client credentials for the given ID if no payload is found in the source.",
      "parameters": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_name",
          "range": "xsd:string"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_source",
          "range": {
            "@type": "ParameterRangeWildcard"
          }
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_storage",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "css:dist/storage/keyvalue/KeyValueStorage.jsonld#KeyValueStorage",
            "genericTypeInstances": [
              "xsd:string",
              {
                "@type": "ParameterRangeWildcard"
              }
            ]
          }
        }
      ],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter__member_storage",
          "memberFieldName": "storage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter__member_find",
          "memberFieldName": "find"
        }
      ],
      "constructorArguments": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_name"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_source"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapter_storage"
        }
      ]
    },
    {
      "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory",
      "@type": "Class",
      "requireElement": "ClientCredentialsAdapterFactory",
      "extends": [
        "css:dist/identity/storage/PassthroughAdapterFactory.jsonld#PassthroughAdapterFactory"
      ],
      "parameters": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory_source",
          "range": "css:dist/identity/storage/AdapterFactory.jsonld#AdapterFactory"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory_storage",
          "range": {
            "@type": "ParameterRangeGenericComponent",
            "component": "css:dist/storage/keyvalue/KeyValueStorage.jsonld#KeyValueStorage",
            "genericTypeInstances": [
              "xsd:string",
              {
                "@type": "ParameterRangeWildcard"
              }
            ]
          }
        }
      ],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory__member_storage",
          "memberFieldName": "storage"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory__member_constructor",
          "memberFieldName": "constructor"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory__member_createStorageAdapter",
          "memberFieldName": "createStorageAdapter"
        }
      ],
      "constructorArguments": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory_source"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentialsAdapterFactory_storage"
        }
      ]
    },
    {
      "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentials",
      "@type": "AbstractClass",
      "requireElement": "ClientCredentials",
      "parameters": [],
      "memberFields": [
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentials__member_secret",
          "memberFieldName": "secret"
        },
        {
          "@id": "css:dist/identity/interaction/email-password/credentials/ClientCredentialsAdapterFactory.jsonld#ClientCredentials__member_webId",
          "memberFieldName": "webId"
        }
      ],
      "constructorArguments": []
    }
  ]
}