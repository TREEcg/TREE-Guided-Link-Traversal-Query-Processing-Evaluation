import type { Representation } from '../../../../http/representation/Representation';
import type { KeyValueStorage } from '../../../../storage/keyvalue/KeyValueStorage';
import type { AccountStore } from '../storage/AccountStore';
import type { ClientCredentials } from './ClientCredentialsAdapterFactory';
import type { CredentialsHandlerInput } from './CredentialsHandler';
import { CredentialsHandler } from './CredentialsHandler';
/**
 * Handles the deletion of credential tokens.
 * Expects the JSON body to have a `delete` field with as value the ID of the token to be deleted.
 * This should be replaced to be an actual DELETE request once the API supports it.
 */
export declare class DeleteCredentialsHandler extends CredentialsHandler {
    private readonly accountStore;
    private readonly credentialStorage;
    constructor(accountStore: AccountStore, credentialStorage: KeyValueStorage<string, ClientCredentials>);
    canHandle({ body }: CredentialsHandlerInput): Promise<void>;
    handle({ operation, body }: CredentialsHandlerInput): Promise<Representation>;
}
