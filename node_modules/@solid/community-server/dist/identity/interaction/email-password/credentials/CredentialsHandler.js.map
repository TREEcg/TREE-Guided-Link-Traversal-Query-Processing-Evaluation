{"version":3,"file":"CredentialsHandler.js","sourceRoot":"","sources":["../../../../../src/identity/interaction/email-password/credentials/CredentialsHandler.ts"],"names":[],"mappings":";;;AAEA,yEAAsE;AAgBtE;;;GAGG;AACH,MAAsB,kBAAmB,SAAQ,2BAAqD;CAAI;AAA1G,gDAA0G","sourcesContent":["import type { Operation } from '../../../../http/Operation';\nimport type { Representation } from '../../../../http/representation/Representation';\nimport { AsyncHandler } from '../../../../util/handlers/AsyncHandler';\n\nexport interface CredentialsHandlerBody extends Record<string, unknown> {\n  email: string;\n  webId: string;\n}\n\n/**\n * `body` is the parsed JSON from `operation.body.data` with the WebID of the account having been added.\n * This means that the data stream in the Operation can not be read again.\n */\nexport interface CredentialsHandlerInput {\n  operation: Operation;\n  body: CredentialsHandlerBody;\n}\n\n/**\n * Handles a request after the user has been authenticated\n * by providing a valid email/password combination in the JSON body.\n */\nexport abstract class CredentialsHandler extends AsyncHandler<CredentialsHandlerInput, Representation> { }\n"]}