{"version":3,"file":"PromptHandler.js","sourceRoot":"","sources":["../../../src/identity/interaction/PromptHandler.ts"],"names":[],"mappings":";;;AAAA,+EAA4E;AAC5E,qEAAkE;AAClE,6DAA0D;AAI1D;;;GAGG;AACH,MAAa,aAAc,SAAQ,uCAAkB;IAGnD,YAAmB,YAA8C;QAC/D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAE,eAAe,EAA2B;QAC9D,+DAA+D;QAC/D,MAAM,MAAM,GAAG,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC;QAC5C,IAAI,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE;YACvC,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;YACrD,MAAM,IAAI,+BAAc,CAAC,QAAQ,CAAC,CAAC;SACpC;QACD,MAAM,IAAI,yCAAmB,CAAC,uBAAuB,MAAM,EAAE,CAAC,CAAC;IACjE,CAAC;CACF;AAjBD,sCAiBC","sourcesContent":["import { BadRequestHttpError } from '../../util/errors/BadRequestHttpError';\nimport { FoundHttpError } from '../../util/errors/FoundHttpError';\nimport { InteractionHandler } from './InteractionHandler';\nimport type { InteractionHandlerInput } from './InteractionHandler';\nimport type { InteractionRoute } from './routing/InteractionRoute';\n\n/**\n * Redirects requests based on the OIDC Interaction prompt.\n * Errors in case no match was found.\n */\nexport class PromptHandler extends InteractionHandler {\n  private readonly promptRoutes: Record<string, InteractionRoute>;\n\n  public constructor(promptRoutes: Record<string, InteractionRoute>) {\n    super();\n    this.promptRoutes = promptRoutes;\n  }\n\n  public async handle({ oidcInteraction }: InteractionHandlerInput): Promise<never> {\n    // We also want to redirect on GET so no method check is needed\n    const prompt = oidcInteraction?.prompt.name;\n    if (prompt && this.promptRoutes[prompt]) {\n      const location = this.promptRoutes[prompt].getPath();\n      throw new FoundHttpError(location);\n    }\n    throw new BadRequestHttpError(`Unsupported prompt: ${prompt}`);\n  }\n}\n"]}