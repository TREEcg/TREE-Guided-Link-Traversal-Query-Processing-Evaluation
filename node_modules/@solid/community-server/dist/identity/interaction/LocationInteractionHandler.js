"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocationInteractionHandler = void 0;
const BasicRepresentation_1 = require("../../http/representation/BasicRepresentation");
const ContentTypes_1 = require("../../util/ContentTypes");
const RedirectHttpError_1 = require("../../util/errors/RedirectHttpError");
const InteractionHandler_1 = require("./InteractionHandler");
/**
 * Transforms an HTTP redirect into a hypermedia document with a redirection link,
 * such that scripts running in a browser can redirect the user to the next page.
 *
 * This handler addresses the situation where:
 * - the user visits a first page
 * - this first page contains a script that performs interactions with a JSON API
 * - as a result of a certain interaction, the user needs to be redirected to a second page
 *
 * Regular HTTP redirects are performed via responses with 3xx status codes.
 * However, since the consumer of the API in this case is a browser script,
 * a 3xx response would only reach that script and not move the page for the user.
 *
 * Therefore, this handler changes a 3xx response into a 200 response
 * with an explicit link to the next page,
 * enabling the script to move the user to the next page.
 */
class LocationInteractionHandler extends InteractionHandler_1.InteractionHandler {
    constructor(source) {
        super();
        this.source = source;
    }
    async canHandle(input) {
        await this.source.canHandle(input);
    }
    async handle(input) {
        try {
            return await this.source.handle(input);
        }
        catch (error) {
            if (RedirectHttpError_1.RedirectHttpError.isInstance(error)) {
                const body = JSON.stringify({ location: error.location });
                return new BasicRepresentation_1.BasicRepresentation(body, input.operation.target, ContentTypes_1.APPLICATION_JSON);
            }
            throw error;
        }
    }
}
exports.LocationInteractionHandler = LocationInteractionHandler;
//# sourceMappingURL=LocationInteractionHandler.js.map