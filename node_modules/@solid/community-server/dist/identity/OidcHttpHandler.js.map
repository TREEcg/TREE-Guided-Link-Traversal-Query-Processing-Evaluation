{"version":3,"file":"OidcHttpHandler.js","sourceRoot":"","sources":["../../src/identity/OidcHttpHandler.ts"],"names":[],"mappings":";;;AAAA,gDAAkD;AAElD,uDAAoD;AAGpD;;GAEG;AACH,MAAa,eAAgB,SAAQ,yBAAW;IAK9C,YAAmB,eAAgC;QACjD,KAAK,EAAE,CAAC;QALS,WAAM,GAAG,IAAA,sBAAY,EAAC,IAAI,CAAC,CAAC;QAM7C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;IACzC,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAoB;QACzD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;QAE1D,kDAAkD;QAClD,MAAM,IAAI,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;QAC/C,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,GAAI,CAAC,UAAU,CAAC,GAAG,IAAI,kCAAkC,CAAC,EAAE;YACzF,OAAO,CAAC,GAAG,GAAG,OAAO,CAAC,GAAI,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC/C;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QACtE,4FAA4F;QAC5F,6GAA6G;QAC7G,6DAA6D;QAC7D,MAAM,QAAQ,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC/C,CAAC;CACF;AAzBD,0CAyBC","sourcesContent":["import { getLoggerFor } from '../logging/LogUtil';\nimport type { HttpHandlerInput } from '../server/HttpHandler';\nimport { HttpHandler } from '../server/HttpHandler';\nimport type { ProviderFactory } from './configuration/ProviderFactory';\n\n/**\n * HTTP handler that redirects all requests to the OIDC library.\n */\nexport class OidcHttpHandler extends HttpHandler {\n  protected readonly logger = getLoggerFor(this);\n\n  private readonly providerFactory: ProviderFactory;\n\n  public constructor(providerFactory: ProviderFactory) {\n    super();\n    this.providerFactory = providerFactory;\n  }\n\n  public async handle({ request, response }: HttpHandlerInput): Promise<void> {\n    const provider = await this.providerFactory.getProvider();\n\n    // Rewrite requests to allow hosting on root paths\n    const path = new URL(provider.issuer).pathname;\n    if (path.length > 1 && request.url!.startsWith(`${path}.well-known/openid-configuration`)) {\n      request.url = request.url!.replace(path, '/');\n    }\n\n    this.logger.debug(`Sending request to oidc-provider: ${request.url}`);\n    // Even though the typings do not indicate this, this is a Promise that needs to be awaited.\n    // Otherwise, the `BaseHttpServerFactory` will write a 404 before the OIDC library could handle the response.\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    await provider.callback()(request, response);\n  }\n}\n"]}