{"version":3,"file":"PassthroughAdapterFactory.js","sourceRoot":"","sources":["../../../src/identity/storage/PassthroughAdapterFactory.ts"],"names":[],"mappings":";;;AAGA;;;;GAIG;AACH,MAAa,kBAAkB;IAI7B,YAAmB,IAAY,EAAE,MAAe;QAC9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,EAAU,EAAE,OAAuB,EAAE,SAAiB;QACxE,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACpD,CAAC;IAEM,KAAK,CAAC,IAAI,CAAC,EAAU;QAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;IAEM,KAAK,CAAC,cAAc,CAAC,QAAgB;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IAC9C,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,GAAW;QAChC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,OAAO,CAAC,EAAU;QAC7B,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAEM,KAAK,CAAC,eAAe,CAAC,OAAe;QAC1C,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;IAC9C,CAAC;CACF;AApCD,gDAoCC;AAED,MAAa,yBAAyB;IAGpC,YAAmB,MAAsB;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IAEM,oBAAoB,CAAC,IAAY;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAChD,CAAC;CACF;AAVD,8DAUC","sourcesContent":["import type { Adapter, AdapterPayload } from 'oidc-provider';\nimport type { AdapterFactory } from './AdapterFactory';\n\n/**\n * OIDC Adapter that calls the corresponding functions of the source Adapter.\n * Can be extended by adapters that do not want to override all functions\n * by implementing a decorator pattern.\n */\nexport class PassthroughAdapter implements Adapter {\n  protected readonly name: string;\n  protected readonly source: Adapter;\n\n  public constructor(name: string, source: Adapter) {\n    this.name = name;\n    this.source = source;\n  }\n\n  public async upsert(id: string, payload: AdapterPayload, expiresIn: number): Promise<void | undefined> {\n    return this.source.upsert(id, payload, expiresIn);\n  }\n\n  public async find(id: string): Promise<AdapterPayload | void | undefined> {\n    return this.source.find(id);\n  }\n\n  public async findByUserCode(userCode: string): Promise<AdapterPayload | void | undefined> {\n    return this.source.findByUserCode(userCode);\n  }\n\n  public async findByUid(uid: string): Promise<AdapterPayload | void | undefined> {\n    return this.source.findByUid(uid);\n  }\n\n  public async consume(id: string): Promise<void | undefined> {\n    return this.source.consume(id);\n  }\n\n  public async destroy(id: string): Promise<void | undefined> {\n    return this.source.destroy(id);\n  }\n\n  public async revokeByGrantId(grantId: string): Promise<void | undefined> {\n    return this.source.revokeByGrantId(grantId);\n  }\n}\n\nexport class PassthroughAdapterFactory implements AdapterFactory {\n  protected readonly source: AdapterFactory;\n\n  public constructor(source: AdapterFactory) {\n    this.source = source;\n  }\n\n  public createStorageAdapter(name: string): Adapter {\n    return this.source.createStorageAdapter(name);\n  }\n}\n"]}