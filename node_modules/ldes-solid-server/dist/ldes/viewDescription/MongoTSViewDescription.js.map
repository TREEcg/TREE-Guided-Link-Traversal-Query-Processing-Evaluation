{"version":3,"file":"MongoTSViewDescription.js","sourceRoot":"","sources":["../../../src/ldes/viewDescription/MongoTSViewDescription.ts"],"names":[],"mappings":";;;AACA,uDAAuG;AACvG,mEAA8D;AAE9D,MAAa,sBAAsB;IAK/B,YAAY,yBAAiC,EAAE,cAAsB,EAAE,cAAuB;QAC1F,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,IAAI,CAAC,cAAc,GAAG,cAAc,IAAI,OAAO,CAAC;IACpD,CAAC;IAEM,oBAAoB,CAAC,KAAY;QACpC,MAAM,MAAM,GAAG,IAAI,6CAAqB,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QACnF,OAAO,MAAM,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAC9E,CAAC;IAEM,uBAAuB,CAAC,OAAqD;QAChF,MAAM,kBAAkB,GAAG,+CAA+C,CAAA;QAC1E,MAAM,iBAAiB,GAAG,2CAA2C,CAAA;QAErE,MAAM,cAAc,GAAG,IAAI,mCAAiB,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,iBAAiB,EAAE,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAA;QACzH,MAAM,cAAc,GAAG,IAAI,gCAAc,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,cAAc,EAAE,kBAAkB,CAAC,CAAA;QAChG,qGAAqG;QACrG,0DAA0D;QAC1D,OAAO,IAAI,iCAAe,CAAC,IAAI,CAAC,yBAAyB,EAAE,cAAc,EAAE,IAAI,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;IAC5G,CAAC;IAEO,wBAAwB;QAC5B,MAAM,kBAAkB,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAA;QAClE,OAAO,kBAAkB,CAAC,MAAM,GAAG,kBAAkB,CAAC,QAAQ,GAAG,GAAG,CAAA;IACxE,CAAC;IAEO,QAAQ;QACZ,OAAO,IAAI,CAAC,wBAAwB,EAAE,GAAG,uBAAuB,CAAA;IACpE,CAAC;IAEO,UAAU;QACd,OAAO,IAAI,CAAC,wBAAwB,EAAE,GAAG,UAAU,CAAA;IACvD,CAAC;CACJ;AAvCD,wDAuCC","sourcesContent":["import {Store} from \"n3\";\nimport {BucketizeStrategy, IngestorClient, IViewDescription, ViewDescription} from \"./ViewDescription\";\nimport {ViewDescriptionParser} from \"./ViewDescriptionParser\";\n\nexport class MongoTSViewDescription {\n    private viewDescriptionIdentifier: string;\n    private ldesIdentifier: string;\n    private viewIdentifier: string;\n\n    constructor(viewDescriptionIdentifier: string, ldesIdentifier: string, viewIdentifier?: string) {\n        this.viewDescriptionIdentifier = viewDescriptionIdentifier;\n        this.ldesIdentifier = ldesIdentifier;\n        this.viewIdentifier = viewIdentifier || 'dummy';\n    }\n\n    public parseViewDescription(store: Store): IViewDescription {\n        const parser = new ViewDescriptionParser(this.viewIdentifier, this.ldesIdentifier);\n        return parser.parseViewDescription(store, this.viewDescriptionIdentifier);\n    }\n\n    public generateViewDescription(options: { timestampPath: string, pageSize?: number }): IViewDescription {\n        const ingestorClientType = \"http://www.example.org/ldes#mongoDBTSIngestor\"\n        const bucketizationType = \"https://w3id.org/ldes#LDESTSFragmentation\"\n\n        const bucketStrategy = new BucketizeStrategy(this.bucketID(), bucketizationType, options.timestampPath, options.pageSize)\n        const ingestorClient = new IngestorClient(this.ingestorID(), bucketStrategy, ingestorClientType)\n        // eventStreamIdentifier and rootNodeIdentifier are not important for generating this viewDescription\n        // as this is normally added within the LDES solid server.\n        return new ViewDescription(this.viewDescriptionIdentifier, ingestorClient, this.ldesIdentifier, \"dummy\")\n    }\n\n    private viewDescriptionNamespace(): string {\n        const viewDescriptionURL = new URL(this.viewDescriptionIdentifier)\n        return viewDescriptionURL.origin + viewDescriptionURL.pathname + '#'\n    }\n\n    private bucketID(): string {\n        return this.viewDescriptionNamespace() + 'bucketizationStrategy'\n    }\n\n    private ingestorID(): string {\n        return this.viewDescriptionNamespace() + 'ingestor'\n    }\n}\n"]}