import type * as Rdf from '@rdfjs/types';
import { Collection, Db } from "mongodb";
import { View } from "../ldes/View";
import { Fragment } from "../ldes/Fragment";
import { DBConfig } from "./MongoDBConfig";
import { DataCollectionDocument, IndexCollectionDocument, MetaCollectionDocument } from "./MongoCollectionTypes";
export declare class MongoTSView implements View {
    protected readonly logger: import("@solid/community-server").Logger;
    dbConfig: DBConfig;
    db: Db;
    metaCollection: Collection<MetaCollectionDocument>;
    indexCollection: Collection<IndexCollectionDocument>;
    dataCollection: Collection<DataCollectionDocument>;
    root: string;
    descriptionId: string;
    streamId: string;
    constructor(db: DBConfig, streamId: string, descriptionId: string);
    init(base: string, prefix: string): Promise<void>;
    /**
     * The URL of the view of the LDES.
     * @returns {string}
     */
    getRoot(): string;
    getMetadata(ldes: string): Promise<Rdf.Quad[]>;
    getFragment(identifier: string): Promise<Fragment>;
}
