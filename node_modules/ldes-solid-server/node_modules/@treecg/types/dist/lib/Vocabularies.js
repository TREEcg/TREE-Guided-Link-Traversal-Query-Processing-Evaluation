"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
exports.__esModule = true;
exports.EX = exports.SHACL = exports.PPLAN = exports.PROV = exports.SDS = exports.LDES = exports.TREE = exports.XSD = exports.RDF = exports.FOAF = exports.DC = exports.createUriAndTermNamespace = exports.createTermNamespace = exports.createUriNamespace = exports.createNamespace = void 0;
var rdf_data_factory_1 = require("rdf-data-factory");
var factory = new rdf_data_factory_1.DataFactory();
/**
 * Creates a function that expands local names from the given base URI,
 * and exports the given local names as properties on the returned object.
 */
function createNamespace(baseUri, toValue) {
    var localNames = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        localNames[_i - 2] = arguments[_i];
    }
    var expanded = {};
    // Expose the main namespace
    expanded.namespace = toValue(baseUri);
    expanded.custom = function (v) { return toValue(baseUri + v); };
    // Expose the listed local names as properties
    for (var _a = 0, localNames_1 = localNames; _a < localNames_1.length; _a++) {
        var localName = localNames_1[_a];
        expanded[localName] = toValue("".concat(baseUri).concat(localName));
    }
    return expanded;
}
exports.createNamespace = createNamespace;
/**
 * Creates a function that expands local names from the given base URI into strings,
 * and exports the given local names as properties on the returned object.
 */
function createUriNamespace(baseUri) {
    var localNames = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        localNames[_i - 1] = arguments[_i];
    }
    return createNamespace.apply(void 0, __spreadArray([baseUri, function (expanded) { return expanded; }], localNames, false));
}
exports.createUriNamespace = createUriNamespace;
/**
 * Creates a function that expands local names from the given base URI into named nodes,
 * and exports the given local names as properties on the returned object.
 */
function createTermNamespace(baseUri) {
    var localNames = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        localNames[_i - 1] = arguments[_i];
    }
    return createNamespace.apply(void 0, __spreadArray([baseUri, factory.namedNode], localNames, false));
}
exports.createTermNamespace = createTermNamespace;
/**
 * Creates a function that expands local names from the given base URI into string,
 * and exports the given local names as properties on the returned object.
 * Under the `terms` property, it exposes the expanded local names as named nodes.
 */
function createUriAndTermNamespace(baseUri) {
    var localNames = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        localNames[_i - 1] = arguments[_i];
    }
    return Object.assign(createUriNamespace.apply(void 0, __spreadArray([baseUri], localNames, false)), { terms: createTermNamespace.apply(void 0, __spreadArray([baseUri], localNames, false)) });
}
exports.createUriAndTermNamespace = createUriAndTermNamespace;
exports.DC = createUriAndTermNamespace('http://purl.org/dc/terms/', 'description', 'modified', 'title');
exports.FOAF = createUriAndTermNamespace('http://xmlns.com/foaf/0.1/', 'Agent');
exports.RDF = createUriAndTermNamespace('http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'type', 'nil', 'rest', 'first');
exports.XSD = createUriAndTermNamespace('http://www.w3.org/2001/XMLSchema#', 'dateTime', 'integer', 'string');
exports.TREE = createUriAndTermNamespace('https://w3id.org/tree#', 'Collection', 'member', 'view', 'value', 'relation', 'path', 'node', 'GreaterThanOrEqualRelation', 'shape', 'search', 'ConditionalImport', 'import', 'importStream', 'remainingItems', 'zoom', 'latitudeTile', 'longitudeTile');
exports.LDES = createUriAndTermNamespace('https://w3id.org/ldes#', 'EventStream', 'timestampPath', 'versionOfPath', 'DurationAgoPolicy', 'Bucketization', 'retentionPolicy', 'amount', 'bucket', 'bucketProperty', 'bucketType', 'LatestVersionSubset', 'BucketizeStrategy');
exports.SDS = createUriAndTermNamespace('https://w3id.org/sds#', 'Member', 'Record', 'ImmutableMember', 'shape', 'carries', 'dataset', 'Stream', 'payload', 'bucket', 'relationType', 'relationBucket', 'relationValue', 'relationPath', 'stream', 'relation');
exports.PROV = createUriAndTermNamespace('http://www.w3.org/ns/prov#', 'used', 'startedAtTime', 'wasGeneratedBy');
exports.PPLAN = createUriAndTermNamespace('http://purl.org/net/p-plan#', 'Activity');
exports.SHACL = createUriAndTermNamespace('http://www.w3.org/ns/shacl#', 'NodeShape', 'targetClass', 'property', 'path', 'datatype', 'nodeKind', 'minCount', 'maxCount');
exports.EX = createUriAndTermNamespace('http://example.org/ns#');
